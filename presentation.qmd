---
title: "Relevantnost digitalnog medijskog prostora (podataka) za HNB"
subtitle: "Prijedlog ustava za medijsko praćenje u realnom vremenu"
author: "Luka Sikic, PhD"
date: "`r format(Sys.Date(), '%B %d, %Y')`"
format: 
  revealjs:
    theme: simple
    logo: photo.jpg  # MAKE SURE 'photo.png' IS IN THE SAME FOLDER
    footer: "Projektni prijedlog za HNB"
    slide-number: c/t
    css: pptstyle.css
    #self-contained: true # This is great for sharing
    chalkboard: true # <-- REMOVED because it conflicts with self-contained
    title-slide-attributes:
      data-background-image: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/Croatian_National_Bank.jpg/500px-Croatian_National_Bank.jpg"
      data-background-size: cover
      data-background-opacity: "0.5"
---


```{r setup, include=FALSE}
# Load necessary packages for the presentation
library(scales)
library(patchwork)
library(ggrepel)
library(udpipe)
library(dplyr)
library(tidytext)
library(stringr)
library(ggplot2)
library(forcats)
library(tidyr)
library(ggridges)
library(widyr)
library(ggraph)
library(igraph)
library(wordcloud)
library(RColorBrewer)
library(tidyverse)
library(lubridate)
library(data.table)
library(readxl)
library(plotly)
# --- 0. SETUP (This should already be in your setup chunk) ---
hnb_colors <- c(
  dark_blue   = "#0D2C54",
  medium_blue = "#2E5A8C",
  accent_red  = "#C41E3A",
  light_grey  = "#A9A9A9",
  medium_grey = "#696969"
)

theme_hnb <- theme_minimal(base_size = 14, base_family = "Roboto Mono") +
  theme(
    plot.title = element_text(face = "bold", size = 16, color = hnb_colors["dark_blue"]),
    plot.subtitle = element_text(size = 12, color = hnb_colors["medium_grey"]),
    legend.position = "top"
  )
theme_set(theme_hnb)


# --- 1. PREPARE THE COLOR MAPPING ---
# Create the named vector that explicitly tells ggplot which color to use for which platform.
# This is the crucial step you were missing.
platform_color_mapping <- c(
  "web"       = hnb_colors["dark_blue"],
  "facebook"  = hnb_colors["medium_blue"],
  "twitter"   = hnb_colors["light_grey"],
  "forum"     = hnb_colors["light_grey"],
  "youtube"   = hnb_colors["light_grey"],
  "reddit"    = hnb_colors["light_grey"],
  "comment"   = hnb_colors["accent_red"],
  "tiktok"    = hnb_colors["light_grey"],
  "instagram" = hnb_colors["light_grey"]
)



```

## Kontekst

- > **Digitalni medijski prostor u RH:** [Definiraju ga](https://raw.githack.com/lusiki/Medijska-matrica/main/docs/chapters/01-kontekst.html) politička ekonomija digitalnog klika, prijeđeni put i algoritamska arhitektura javnog diskursa.

- > **Komunikacija središnjih banaka:** Značajna promjena od tajnovitosti do transparentnosti (1980e do 2000e), preko komunikacijske revolucije (1990e do ranih 2000ih), do aktivnog angažmana u medijskom prostoru.

- > **Ekonomska literatura:** Računalne društvene znanosti i korištenje velikih podataka su standardni u sve većem broju primjena u makroekonomiji i financijama.

---

## Digitalni medijski podatci

<br><br>
Alternativni podatci nisu zamjena nego nadopuna!
<br><br>


::: {.columns}
::: {.column width="50%"}
#### Strukturirani ekonomski podatci 

-   DZS ankete, FINA (GIF) izvještaji, GDP
-   **Prednosti:** Kvaliteta, struktura, pouzdanost
-   **Nedostatci:** Spori, skupi, niska frkvencija
:::

::: {.column width="50%"}
#### Digitalni medijski podatci ⚡️

-   Vijesti, društvene mreže, tražilice, senzori
-   **Prednosti:** U stvarnom vremenu, otkrivene preferencije, novi uvidi
-   **Nedostatci:** Bučni, nestrukturirani, pristrani
:::
:::

---

## Digitalni medijski prostor RH

Najvažniji dio medijskog prostora u Hrvatskoj je digitalni medijski prostor.

::: {.panel-tabset}
#### Koncept

Podatci uključuju: 
<br><br>
-  razdoblje 2021-06/2024-06
<br><br>
-  uključuju sve javne objave (N~21mil) 
<br><br>
-  platforme:  web,fb,ig,x,yt,reddit,forum,komentari

#### Objave
```{r plot1, echo=FALSE, message=FALSE, warning=FALSE}
# Učitavanje potrebnih paketa
required_packages <- c(
  "duckdb",       # Za efikasno upravljanje podacima slično bazi podataka
  "dplyr",        # Za manipulaciju podacima
  "ggplot2",      # Za vizualizacije
  "lubridate",    # Za rad s datumima i vremenom
  "scales",       # Za formatiranje brojeva u vizualizacijama
  "knitr",        # Za kable tablice
  "RColorBrewer", # Za palete boja
  "stringr",      # Za manipulaciju tekstom
  "tidyr",        # Za pivotiranje podataka za vizualizacije
  "ggrepel",      # Za izbjegavanje preklapanja teksta na grafikonima
  "fmsb",
  "kableExtra"
)

for (pkg in required_packages) {
  # Ovdje pretpostavljamo da su svi paketi instalirani
  library(pkg, character.only = TRUE)
}


# --- Povezivanje s DuckDB bazom podataka ---
# VAŽNO: Prilagodite putanju do vaše .duckdb datoteke!
duckdb_file_path <- "D:/LUKA/DetermDB/determDB.duckdb" # <--- PRILAGODITE OVO!
table_name <- "media_data"

if (!file.exists(duckdb_file_path)) {
  stop("DuckDB datoteka nije pronađena na navedenoj putanji: ", duckdb_file_path, 
       "\nMolimo provjerite putanju ili pokrenite skriptu za učitavanje XLSX datoteka.")
}

con <- dbConnect(duckdb::duckdb(), dbdir = duckdb_file_path, read_only = FALSE)
message("Povezano s perzistentnom DuckDB bazom za analizu.")
l <- dbExecute(con, "SET memory_limit='16GB';") # Održavanje memorijskog limita

# --- Provjera statusa tablice i broja objava ---
# Ispravka za izvlačenje numeričke vrijednosti iz data.frame-a
count_result <- dbGetQuery(con, paste0("SELECT COUNT(*) FROM ", table_name, ";"))[]

# --- 2. Dominacija platformi i njihove napredne performanse (Udio, Učinkovitost i Interakcijski Profil) ---
platform_overview_ultimate <- dbGetQuery(con, paste0("
  SELECT
    SOURCE_TYPE,
    COUNT(*) AS num_posts,
    SUM(INTERACTIONS) AS total_interactions,
    SUM(REACH) AS total_reach,
    AVG(INTERACTIONS) AS avg_interactions_per_post,
    AVG(REACH) AS avg_reach_per_post,
    AVG(ENGAGEMENT_RATE) AS platform_avg_engagement_rate,
    AVG(VIRALITY) AS platform_avg_virality,
    (SUM(SHARE_COUNT) * 1.0 / NULLIF(SUM(INTERACTIONS), 0)) * 100 AS platform_shareability_index,
    (SUM(LIKE_COUNT) * 1.0 / NULLIF(SUM(INTERACTIONS), 0)) * 100 AS platform_like_ratio,
    (SUM(COMMENT_COUNT) * 1.0 / NULLIF(SUM(INTERACTIONS), 0)) * 100 AS platform_comment_ratio
  FROM ", table_name, "
  GROUP BY SOURCE_TYPE
  ORDER BY num_posts DESC;
")) %>%
  mutate(across(c(platform_avg_engagement_rate, platform_avg_virality, platform_shareability_index, platform_like_ratio, platform_comment_ratio),
                ~ifelse(is.nan(.), 0, .))) # Handle potential NaN for display



# Vizualizacija 1: Ukupan broj objava po platformi (General Overview - Posts per Platform)
ggplot(
  platform_overview_ultimate, 
  # Modern syntax for horizontal bars: y-axis is the category, x-axis is the value
  aes(x = num_posts, y = reorder(SOURCE_TYPE, num_posts), fill = SOURCE_TYPE)
) +
  
  # geom_col() is the modern replacement for geom_bar(stat="identity")
  geom_col() +
  
  # Add formatted text labels that match the plot's font
  geom_text(
    aes(label = scales::comma(num_posts, accuracy = 1)), 
    hjust = -0.1, 
    size = 3.5, 
    family = "Roboto Mono" # Ensures font consistency with the global theme
  ) +
  
  # THE FIX: Apply your custom color mapping
  scale_fill_manual(values = platform_color_mapping) +
  
  # Format the x-axis and add space for labels
  scale_x_continuous(
    labels = scales::comma, 
    expand = expansion(mult = c(0.01, 0.15))
  ) +
  
  # Remove the redundant legend
  guides(fill = "none") +
  
  # Add clearer, more professional titles
  labs(
    title = "Ukupan broj objava po platformi",
    subtitle = "",
    x = "Broj objava",
    y = "Tip platforme"
  ) +
  
  # Final theme tweaks for a cleaner look
  theme(
    panel.grid.major.y = element_blank(), # Remove horizontal grid lines for focus
    panel.grid.minor.x = element_blank()
  )


```

#### Interakcije
```{r , echo=FALSE, message=FALSE, warning=FALSE}
# Vizualizacija 2: Ukupne interakcije po platformi (General Overview - Interactions per Platform)
ggplot(
  platform_overview_ultimate, 
  # Modern syntax: y-axis is the category, x-axis is the value
  aes(x = total_interactions, y = reorder(SOURCE_TYPE, total_interactions), fill = SOURCE_TYPE)
) +
  
  # Use geom_col() for a cleaner look
  geom_col() +
  
  # Add formatted text labels with the correct font
  geom_text(
    aes(label = scales::comma(total_interactions, accuracy = 1)), 
    hjust = -0.1, 
    size = 3.5, 
    family = "Roboto Mono" # Ensures font consistency
  ) +
  
  # APPLY THE FIX: Use your custom color mapping
  scale_fill_manual(values = platform_color_mapping) +
  
  # Format the x-axis and add space for labels
  scale_x_continuous(
    labels = scales::comma, 
    expand = expansion(mult = c(0.01, 0.15))
  ) +
  
  # Remove the redundant legend
  guides(fill = "none") +
  
  # Use the clear, professional titles from your original code
  labs(
    title = "Ukupne interakcije po platformi ",
    subtitle = "Gdje se generira najveći ukupan angažman publike?",
    x = "Ukupne interakcije",
    y = "Tip platforme"
  ) +
  
  # Final theme tweaks for a clean, professional look
  theme(
    panel.grid.major.y = element_blank(), # Remove horizontal grid lines
    panel.grid.minor.x = element_blank()
  )
```

#### Efikasnost I
```{r , echo=FALSE, message=FALSE, warning=FALSE}
# --- 2. THE REVISED GGPLOT CODE FOR TOTAL REACH ---
# Assuming your data is named 'platform_overview_ultimate'
ggplot(
  platform_overview_ultimate, 
  # Modern syntax: y-axis is the category, x-axis is the value
  aes(x = total_reach, y = reorder(SOURCE_TYPE, total_reach), fill = SOURCE_TYPE)
) +
  
  # Use geom_col() for a cleaner look
  geom_col() +
  
  # Add formatted text labels with the correct font
  geom_text(
    aes(label = scales::comma(total_reach, accuracy = 1)), 
    hjust = -0.1, 
    size = 3.5, 
    family = "Roboto Mono" # Ensures font consistency
  ) +
  
  # APPLY THE FIX: Use your consistent, on-brand color mapping
  scale_fill_manual(values = platform_color_mapping) +
  
  # Format the x-axis and add space for labels
  scale_x_continuous(
    labels = scales::comma, 
    expand = expansion(mult = c(0.01, 0.15))
  ) +
  
  # Remove the redundant legend
  guides(fill = "none") +
  
  # Use the clear, professional titles from your original code
  labs(
    title = "Ukupan doseg po  platformi",
    subtitle = "Gdje se ostvaruje najveći ukupan doseg publike?",
    x = "Ukupan doseg",
    y = "Tip platforme"
  ) +
   # Final theme tweaks for a clean, professional look
  theme(
    panel.grid.major.y = element_blank(), # Remove horizontal grid lines
    panel.grid.minor.x = element_blank())
```

#### Efikasnost II
```{r, echo=FALSE, message=FALSE, warning=FALSE}
# --- 1. THE COLOR MAPPING (Should already be defined in your script) ---
# Reusing this ensures a consistent visual identity across all your plots.
platform_color_mapping <- c(
  "web"       = hnb_colors["dark_blue"],
  "facebook"  = hnb_colors["medium_blue"],
  "twitter"   = hnb_colors["light_grey"],
  "forum"     = hnb_colors["light_grey"],
  "youtube"   = hnb_colors["light_grey"],
  "reddit"    = hnb_colors["light_grey"],
  "comment"   = hnb_colors["accent_red"],
  "tiktok"    = hnb_colors["light_grey"],
  "instagram" = hnb_colors["light_grey"]
)

# --- 2. THE REVISED GGPLOT CODE FOR AVERAGE INTERACTIONS ---
# Assuming your data is named 'platform_overview_ultimate'
ggplot(
  platform_overview_ultimate, 
  # Modern syntax: y-axis is the category, x-axis is the value
  aes(x = avg_interactions_per_post, y = reorder(SOURCE_TYPE, avg_interactions_per_post), fill = SOURCE_TYPE)
) +
  
  # Use geom_col() for a cleaner look
  geom_col() +
  
  # Add formatted text labels with the correct font.
  # round() is a great choice for averages with decimals.
  geom_text(
    aes(label = round(avg_interactions_per_post, 2)), 
    hjust = -0.1, 
    size = 3.5, 
    family = "Roboto Mono" # Ensures font consistency
  ) +
  
  # APPLY THE FIX: Use your custom color mapping
  scale_fill_manual(values = platform_color_mapping) +
  
  # Format the x-axis and add space for labels
  scale_x_continuous(
    labels = scales::comma, 
    expand = expansion(mult = c(0.01, 0.15))
  ) +
  
  # Remove the redundant legend
  guides(fill = "none") +
  
  # Use the clear, professional titles from your original code
  labs(
    title = "Prosječne interakcije po objavi po platformi",
    subtitle = "",
    x = "Prosječne interakcije po objavi",
    y = "Tip platforme"
  ) +
  
  # Final theme tweaks for a clean, professional look
  theme(
    panel.grid.major.y = element_blank(), # Remove horizontal grid lines
    panel.grid.minor.x = element_blank()
  )
```

#### Proba I
```{r, echo=FALSE, message=FALSE, warning=FALSE}


# --- 1. CREATE THE GGPLOT OBJECT 'p' (Your existing code is perfect) ---
p <- ggplot(
  platform_overview_ultimate, 
  aes(
    x = avg_interactions_per_post, 
    y = reorder(SOURCE_TYPE, avg_interactions_per_post), 
    fill = SOURCE_TYPE,
    text = paste("Platforma:", SOURCE_TYPE, "<br>Prosjek interakcija:", round(avg_interactions_per_post, 2))
  )
) +
  geom_col() +
  scale_fill_manual(values = platform_color_mapping) +
  scale_x_continuous(labels = scales::comma, expand = expansion(mult = c(0.01, 0.15))) +
  guides(fill = "none") +
  labs(
    title = "Prosječne interakcije po objavi po platformi",
    subtitle = "Učinkovitost platformi u generiranju angažmana na pojedinačnim objavama",
    x = "Prosječne interakcije po objavi",
    y = "Tip platforme"
  ) +
  theme_minimal(base_family = "Roboto Mono") +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.minor.x = element_blank()
  )

# --- 2. CALCULATE A DYNAMIC HEIGHT ---
# Rule of thumb: Give each bar ~40 pixels + ~150 pixels for titles/axes.
num_platforms <- nrow(platform_overview_ultimate)
dynamic_height <- (num_platforms * 40) + 150

# --- 3. CONVERT TO PLOTLY WITH CUSTOM DIMENSIONS ---
# Add the height and width arguments to the ggplotly() call
ggplotly(p, tooltip = "text", height = dynamic_height, width = NULL)


```

#### Proba II
```{r, echo=FALSE, message=FALSE, warning=FALSE}
# --- 1. PREPARE THE DATA (This part is correct) ---
plot_data <- platform_overview_ultimate %>%
  # Use forcats::fct_reorder for robust ordering
  mutate(SOURCE_TYPE = forcats::fct_reorder(SOURCE_TYPE, avg_interactions_per_post))

# --- 2. BUILD THE NATIVE PLOTLY CHART (REVISED STRUCTURE) ---
plot_ly(
  data = plot_data,
  x = ~avg_interactions_per_post,
  y = ~SOURCE_TYPE
) %>%
  # EXPLICITLY ADD THE BARS: This is the robust way to add a trace
  add_bars(
    color = ~SOURCE_TYPE,          # Map color to the platform
    colors = platform_color_mapping, # Use our custom color palette
    orientation = 'h',
    # Customize the hover text with HTML formatting
    hovertemplate = paste(
      "<b>%{y}</b><br>",
      "Prosjek interakcija: %{x:.2f}",
      "<extra></extra>" # Magic tag to hide the trace name
    )
  ) %>%
  # Now, apply the layout to the finished plot
  layout(
    title = list(
      text = "<b>Prosječne interakcije po objavi po platformi</b><br><sub>Učinkovitost platformi u generiranju angažmana</sub>",
      font = list(family = "Roboto Mono")
    ),
    xaxis = list(title = "Prosječne interakcije po objavi"),
    yaxis = list(title = "Tip platforme"),
    showlegend = FALSE, # Hide the legend
    # FIX: Complete the font list
    font = list(family = "Roboto Mono", color = hnb_colors["medium_grey"]) 
  )
```


#### Dinamika
```{r , echo=FALSE, message=FALSE, warning=FALSE}
monthly_full_trends <- dbGetQuery(con, paste0("
  SELECT
    strftime(DATETIME, '%Y-%m') AS month_label,
    strftime(DATETIME, '%Y') AS year,
    strftime(DATETIME, '%m') AS month_num,
    COUNT(*) AS num_posts,
    SUM(INTERACTIONS) AS total_interactions,
    SUM(REACH) AS total_reach,
    AVG(INTERACTIONS) AS avg_interactions_per_post,
    AVG(REACH) AS avg_reach_per_post,
    AVG(ENGAGEMENT_RATE) AS monthly_avg_engagement_rate,
    AVG(VIRALITY) AS monthly_avg_virality,
    (SUM(SHARE_COUNT) * 1.0 / NULLIF(SUM(INTERACTIONS), 0)) * 100 AS monthly_shareability_index
  FROM ", table_name, "
  WHERE DATETIME IS NOT NULL
  GROUP BY month_label, year, month_num
  ORDER BY month_label;
")) %>%
  mutate(month = ymd(paste0(month_label, "-01"))) %>%
  filter(!is.na(month)) %>%
  mutate(across(c(monthly_avg_engagement_rate, monthly_avg_virality, monthly_shareability_index),
                ~ifelse(is.nan(.), 0, .))) %>%
  
  # --- FIX IS HERE: Remove the last row (the incomplete month) ---
  slice(1:(n()-1))


# The rest of your plotting code remains exactly the same.
# It will now plot without the final drop.
coeff <- max(monthly_full_trends$total_interactions, na.rm = TRUE) / max(monthly_full_trends$num_posts, na.rm = TRUE)

    
# --- 1. THE COLOR PALETTE (Should already be in your setup chunk) ---
hnb_colors <- c(
  dark_blue   = "#0D2C54",
  accent_red  = "#C41E3A"
)

# --- 2. THE "BULLETPROOF" GGPLOT CODE ---

# DEFINE LABELS AS VARIABLES to prevent typos
label_posts <- "Broj objava"
label_interactions <- "Ukupne interakcije"

ggplot(monthly_full_trends, aes(x = month)) +
  
  # Use the variables for the color labels
  geom_line(aes(y = num_posts, color = label_posts), linewidth = 1) +
  geom_point(aes(y = num_posts, color = label_posts), size = 2.5) +
  
  geom_line(aes(y = total_interactions / coeff, color = label_interactions), linewidth = 1) +
  geom_point(aes(y = total_interactions / coeff, color = label_interactions), size = 2.5) +
  
  # Define the primary and secondary y-axes
  scale_y_continuous(
    name = label_posts, # Use the variable here too for consistency
    labels = scales::comma,
    sec.axis = sec_axis(~ . * coeff, name = label_interactions, labels = scales::comma)
  ) +
  
  # THE CRUCIAL FIX: Create the named vector using the variables
  # This makes it impossible for them to be mismatched
  scale_color_manual(
    name = "Metrika:", 
    values = setNames(
      c(hnb_colors["dark_blue"], hnb_colors["accent_red"]), 
      c(label_posts, label_interactions)
    )
  ) +
  
  # Use clear, professional labels
  labs(
    title = "Mjesečni trend objava i interakcija",
    subtitle = "Usporedba produkcije sadržaja i angažmana publike (završeni mjeseci)",
    x = "Mjesec",
    y = label_posts
  ) +
  
  # Theme tweaks to color the axes to match the lines for maximum clarity
  theme(
    legend.position = "top",
    axis.title.y.left = element_text(color = hnb_colors["dark_blue"], face = "bold"),
    axis.text.y.left = element_text(color = hnb_colors["dark_blue"]),
    axis.title.y.right = element_text(color = hnb_colors["accent_red"], face = "bold"),
    axis.text.y.right = element_text(color = hnb_colors["accent_red"])
  )

```

#### Dnevno




:::

---

## Strateška razina

Dva svijeta HNB: Stručna rasprava protiv javne arene! 


::: {.panel-tabset}
#### Koncept

Analiza 20k medijskih objava o HNB otkriva zanimljivu sliku. To je priča o dva različita svijeta koji se rijetko dodiruju... sve dok ih ključna tema ne prisili na to. Inflacija, od monetarnog do medijskog fenomena!

#### Centralnost
```{r plot22, echo=FALSE, message=FALSE, warning=FALSE}

# --- Priprema podataka (izvršava se u pozadini) ---

# Učitavanje glavne baze podataka
# remove titkok from SOURCE_TYPE
dta <- readRDS("./hnb.rds") %>%
  mutate(
    DATE = as.Date(DATE), # Convert the column to Date class first
    year = as.integer(format(DATE, "%Y"))
  ) %>%
  filter(SOURCE_TYPE != "tiktok") %>%
  mutate(
    SOURCE_TYPE = factor(SOURCE_TYPE, levels = c("web", "youtube", "facebook", "twitter", "reddit", "forum", "comment"))
  ) %>%
  #remove year 2024
  filter(DATE >= as.Date("2021-01-01") & DATE < as.Date("2024-01-01")) %>%
  filter(year != 2024) %>%
  mutate(doc_id = row_number())



# Kreiranje stratificiranog uzorka
# sample_proportion <- 0.05
# set.seed(123)
# dta_stratified_sample <- dta %>%
#   filter(nchar(FULL_TEXT) > 100) %>%
#   group_by(year, SOURCE_TYPE) %>%
#   slice_sample(prop = sample_proportion) %>%
#   ungroup() %>%
#   mutate(doc_id = row_number())

# Učitavanje prethodno obrađenih lingvističkih podataka (štedi vrijeme)
files <- list.files("D:/LUKA/HNB/Language model sample", full.names = TRUE, pattern = "\\.rds")
nlp_results_df <- lapply(files, readRDS) %>%
  bind_rows() %>%
  mutate(doc_id = as.integer(doc_id))

# Definicija tematskih rječnika v3
thematic_dictionaries_v3 <- list(
  
  # 1. Glavna funkcija HNB-a: kontrola cijena i novčane mase
  MONETARNA_POLITIKA_I_INFLACIJA = sort(c(
    "agregat", "cijen", "ciljan", "deflacij", "dezinflacij", "eskontn", 
    "ekspanzivn", "hro", "inflacij", "kamatn", "kamatna stopa", "kreditni plasmani", 
    "likvidnost", "mas", "monetarn", "novčan", "obvezna pričuva", "otvoreno tržište",
    "ponud", "potražnj", "referentn", "repo", "restriktivn", "stabilnost cijena", 
    "stop", "transmisijsk"
  )),
  
  # 2. Druga glavna funkcija: nadzor banaka i osiguranje zdravlja financijskog sustava
  FINANCIJSKA_STABILNOST_I_NADZOR_BANAKA = sort(c(
    "adekvatnost kapitala", "aml", "bank", "basel", "bonitet", "depozit", "financijsk", 
    "hanfa", "institucij", "kapitalni zahtjev", "kreditn", "leasing", "likvidacij",
    "loš kredit", "makrobonitetn", "nadzor", "nenaplativ", "npl", "osiguranje", 
    "osiguranje depozita", "regulacij", "rizik", "sanacij", "sistemsk",
    "sprečavanje pranja novca", "stabilnost", "stečaj", "stres test", "supervizij"
  )),
  
  # 3. Ključna tema u promatranom razdoblju
  UVODJENJE_EURA_I_TECAJ = sort(c(
    "aprecijacij", "cent", "deprecijacij", "devizn", "devizni tečaj", "dvostruki optjecaj", 
    "erm ii", "eur", "eurozon", "eurosustav", "fiksni tečaj", "konverzij", "kovnica novca",
    "kuna", "lipa", "prilagodb", "tečaj", "uvođenj", "zamjen", "zaokruživanj"
  )),
  
  # 4. HNB kao analitička institucija koja objavljuje projekcije za gospodarstvo
  MAKROEKONOMSKE_ANALIZE_I_PROGNOZE = sort(c(
    "analiz", "bdp", "bilten", "dug", "ekonomsk", "fiskaln", "gospodarsk", 
    "industrijska proizvodnja", "investicij", "izvoz", "izvješć", "javni dug", 
    "konkurentnost", "kretanj", "makroekonomsk", "nezaposlenost", "očekivanj", 
    "potrošnj", "prognoz", "projekcij", "rast", "recesij", "uvoz", "zaposlenost"
  )),
  
  # 5. Funkcioniranje same institucije, njezinih tijela i transparentnost
  UPRAVLJANJE_I_TRANSPARENTNOST_HNB = sort(c(
    "devizne pričuve", "dobit", "guverner", "gubitak", "hnb", "izvješće saboru", 
    "mandat", "neovisnost", "odluk", "pričuv", "proračun hnb", "revizij", "savjet hnb",
    "sjednic", "statut", "transparentnost", "viceguverner", "zakon o hnb", "zlato", 
    "zlatne rezerve"
  )),
  
  # 6. Upravljanje fizičkim i digitalnim novcem te platnim sustavima
  PLATNI_PROMET_I_GOTOVINA = sort(c(
    "beskontaktn", "cbdc", "digitalna valuta", "digitalni euro", "digitalni novac", 
    "fintech", "gotovin", "gotovinsk", "kartic", "kovanic", "kriptovalut", "nks", 
    "novčanic", "platni promet", "target2", "transakcij"
  )),
  
  # 7. Odnosi s ključnim međunarodnim financijskim institucijama
  MEDJUNARODNI_ODNOSI_I_EU = sort(c(
    "banka za međunarodne namire", "bis", "članstv", "ebrd", "ecb", "esb", 
    "europska komisija", "europska središnja banka", "europsk", "fitch", "imf", 
    "kreditni rejting", "mmf", "moody's", "s&p", "suradnj", "svjetska banka"
  )),
  
  # 8. Teme koje izazivaju javnu polemiku i kritike na račun HNB-a
  JAVNA_PERCEPCIJA_I_KRITIKE = sort(c(
    "afer", "dužnic", "etika", "franak", "klub", "kritik", "netransparentnost",
    "odgovornost", "plać", "polemik", "potrošač", "povjerenj", "presud", "skandal",
    "sukob interesa", "švicarac", "troškov", "tužb", "udruga franak", "zaštita potrošača"
  ))
)


hnb_duznosnici_dict <- list(
  HNB_DUZNOSNICI = c(
    # Sadašnji i nedavni čelnici
    "boris vujčić", "vujčić",
    "sandra švaljek", "švaljek",
    "tomislav ćorić", "ćorić",
    "michael faulend", "faulend",
    "bojan fras", "fras",
    "ivana jakir-bajo", "martina jakir-bajo", "jakir-bajo", "jakir", # Uključene obje verzije imena
    "maroje lang", "lang",
    "roman šubić", "šubić",
    "slavko tešija", "tešija",
    "martina drvar", "drvar",
    
    # Bivši guverneri
    "željko rohatinski", "rohatinski",
    "marko škreb", "škreb",
    
    # Povezani stručnjaci iz HNB-a
    "evan kraft", "kraft" # bivši savjetnik
  )
)

# ===================================================================
# 2. POLITIČKI AKTERI (VLADA I PREDSJEDNIK)
# ===================================================================
politicki_akteri_dict <- list(
  POLITICKI_AKTERI = c(
    "andrej plenković", "plenković",
    "zoran milanović", "milanović",
    "davor škrlec", "škrlec" # Bivši EU zastupnik, čest kritičar
  )
)

# ===================================================================
# 3. NEOVISNI ANALITIČARI, AKADEMICI I NOVINARI
# ===================================================================
analiticari_i_mediji_dict <- list(
  ANALITICARI_I_MEDIJI = c(
    # Ekonomski analitičari i profesori
    "velimir šonje", "šonje",
    "ljubo jurčić", "jurčić",
    "ivo družić", "družić",
    
    # Specijalizirani novinari
    "marina klepo", "klepo",
    "boris pavković", "pavković"
  )
)

# ===================================================================
# 4. ČELNICI DRUGIH FINANCIJSKIH INSTITUCIJA
# ===================================================================
financijske_institucije_dict <- list(
  FINANCIJSKE_INSTITUCIJE = c(
    # HANFA
    "ante žigman", "žigman", # sadašnji predsjednik
    "ante matek", "matek",   # bivši predsjednik
    
    # HUB (Hrvatska udruga banaka)
    "tamara perko", "perko", # sadašnja predsjednica
    "zdenko rogić", "rogić", # bivši predsjednik
    
    # HBOR
    "miroslav gržetić", "gržetić"
  )
)

# ===================================================================
# 5. MEĐUNARODNI DUŽNOSNICI (ECB, MMF)
# ===================================================================
medjunarodni_duznosnici_dict <- list(
  MEDJUNARODNI_DUZNOSNICI = c(
    # ECB
    "christine lagarde", "lagarde",
    "mario draghi", "draghi",
    
    # MMF
    "jan kees martijn", "martijn",
    "hans-jörg rudloff", "rudloff" # Napomena: Rudloff je bio predstavnik investicijske banke, ne MMF-a
  )
)

# ===================================================================
# 6. SINDIKALNI I DRUGI PREDSTAVNICI
# ===================================================================
sindikati_i_drugi_dict <- list(
  SINDIKATI_I_DRUGI = c(
    "krešimir sever", "sever",
    "mladen novosel", "novosel"
  )
)



svi_ljudi_dictionary <- c(
  hnb_duznosnici_dict,
  politicki_akteri_dict,
  analiticari_i_mediji_dict,
  financijske_institucije_dict,
  medjunarodni_duznosnici_dict,
  sindikati_i_drugi_dict
)

# Kombiniranje s glavnim tematskim rječnikom
#final_dictionary <- c(hnb_thematic_dictionary_v2, svi_ljudi_dictionary)



# Izračun tematskih scoreova i obogaćivanje baze podataka
calculate_theme_scores <- function(text, dictionaries) {
  text_lower <- tolower(text)
  total_words <- str_count(text_lower, "\\w+")
  if (total_words == 0) return(NULL)
  scores <- purrr::map(dictionaries, ~sum(str_count(text_lower, .x)))
  normalized_scores <- purrr::map(scores, ~(.x / total_words) * 1000)
  names(normalized_scores) <- paste0("norm_", names(scores))
  scores_vec <- unlist(scores)
  if(all(scores_vec == 0)){
    dominant_topic <- "Nema Teme"
  } else {
    dominant_topic <- names(scores)[which.max(scores_vec)]
  }
  return(c(as.list(scores), as.list(normalized_scores), dominant_topic = dominant_topic))
}
theme_analysis_data <- purrr::map_dfr(dta$FULL_TEXT, ~calculate_theme_scores(., thematic_dictionaries_v3))
dta_enriched <- bind_cols(dta, theme_analysis_data)
dta_with_themes <- bind_cols(dta, theme_analysis_data)



theme_analysis_data2 <- purrr::map_dfr(dta$FULL_TEXT, ~calculate_theme_scores(., svi_ljudi_dictionary))
dta_enriched2 <- bind_cols(dta, theme_analysis_data2)
dta_with_themes2 <- bind_cols(dta, theme_analysis_data2)

```

```{r plot3, echo=FALSE, message=FALSE, warning=FALSE}
thematic_intensity_data2 <- dta_enriched2 %>%
  select(starts_with("norm_")) %>%
  pivot_longer(everything(), names_to = "topic", values_to = "intensity") %>%
  mutate(topic = str_remove(topic, "norm_")) %>%
  filter(intensity > 0)

ggplot(thematic_intensity_data2, aes(x = intensity, y = fct_reorder(topic, intensity, .fun = median))) +
  geom_density_ridges(scale = 2, fill = "#0072B2", color = "white", alpha = 0.8) +
  scale_x_log10(breaks = c(1, 10, 100, 1000), labels = c("1", "10", "100", "1000")) +
  theme_minimal(base_size = 14) +
  labs(
    title = "Distribucija intenziteta tema",
    subtitle = "Koliko su teme centralne za članke u kojima se pojavljuju?",
    x = "Intenzitet teme (spominjanja na 1000 riječi, log skala)",
    y = "Tema")
  # ) +
  # theme(panel.grid.major.y = element_blank())
```

#### Interakcije
```{r}
engagement_by_topic <- dta_enriched %>%
  filter(dominant_topic != "Nema Teme") %>%
  group_by(dominant_topic) %>%
  summarise(
    avg_interactions = mean(INTERACTIONS, na.rm = TRUE),
    total_articles = n()
  ) %>%
  arrange(desc(avg_interactions))

ggplot(engagement_by_topic, aes(x = avg_interactions, y = reorder(dominant_topic, avg_interactions))) +
  geom_col(fill = "#0072B2", width=0.8) +
  geom_text(aes(label = round(avg_interactions)), hjust = -0.2, size=4) +
  expand_limits(x = max(engagement_by_topic$avg_interactions) * 1.1) +
  theme_minimal(base_size = 14) +
  labs(title = "Koje teme generiraju najviše interakcija?",
       subtitle = "Prosječan broj interakcija po članku za svaku dominantnu temu",
       x = "Prosječne interakcije", y = "Dominantna tema")
# 
# +
#   theme(panel.grid.major.y = element_blank())
```

#### Mreža

```{r lexicons, echo=FALSE, message=FALSE, warning=FALSE}
# read in lexicons
CroSentilex_n <- read.delim("C:/Users/Lukas/Dropbox/Mislav@Luka/crosentilex-negatives.txt",
                                   header = FALSE,
                                   sep = " ",
                                   stringsAsFactors = FALSE,
                                   fileEncoding = "UTF-8")  %>%
                   rename(word = "V1", sentiment = "V2" ) %>%
                   mutate(brija = "NEG")

CroSentilex_p  <- read.delim("C:/Users/Lukas/Dropbox/Mislav@Luka/crosentilex-positives.txt",
                                   header = FALSE,
                                   sep = " ",
                                   stringsAsFactors = FALSE,
                                   fileEncoding = "UTF-8") %>%
                    rename(word = "V1", sentiment = "V2" ) %>%
                    mutate(brija = "POZ")


library(data.table)
crosentilex  <- rbind(setDT(CroSentilex_n), setDT(CroSentilex_p))
# # check lexicon data 
# #head(sample_n(Crosentilex_sve,1000),15)
# 
#  
CroSentilex_Gold  <- read.delim2("C:/Users/Lukas/Dropbox/Mislav@Luka/gs-sentiment-annotations.txt",
                                 header = FALSE,
                                 sep = " ",
                                 stringsAsFactors = FALSE) %>%
                    rename(word = "V1", sentiment = "V2" )
 # Encoding(CroSentilex_Gold$word) <- "UTF-8"
 # CroSentilex_Gold[1,1] <- "dati"
 # CroSentilex_Gold$sentiment <- str_replace(CroSentilex_Gold$sentiment , "-", "1")
 # CroSentilex_Gold$sentiment <- str_replace(CroSentilex_Gold$sentiment , "\\+", "2")
 # CroSentilex_Gold$sentiment <- as.numeric(unlist(CroSentilex_Gold$sentiment))
# check lexicon data 
#head(sample_n(CroSentilex_Gold,100),15)
crosentilex_gold_prepared <- CroSentilex_Gold %>%
  mutate(
    sentiment_value = case_when(
      sentiment == 2 ~ 1,   # Pozitivno
      sentiment == 1 ~ -1,  # Negativno
      TRUE ~ 0              # Neutralno
    )
  ) %>%
  select(word, sentiment_value)

 
nrc_lexicon  <- read_excel("C:/Users/Lukas/Dropbox/Mislav@Luka/lilaHR_clean.xlsx", sheet = "Sheet1") %>% select (-"...1")


# Prvo definiramo "rječnik" za prevođenje
emotion_translator_hr <- c(
  "Anger"        = "Ljutnja",
  "Anticipation" = "Iščekivanje",
  "Disgust"      = "Gađenje",
  "Fear"         = "Strah",
  "Joy"          = "Radost",
  "Sadness"      = "Tuga",
  "Surprise"     = "Iznenađenje",
  "Trust"        = "Povjerenje"
  # Ne trebamo 'Positive' i 'Negative' jer ih ionako filtriramo
)

# Sada modificiramo originalni cjevovod
nrc_lexicon_long <- nrc_lexicon %>%
  rename(word = HR) %>% 
  pivot_longer(
    cols = -word,
    names_to = "emotion",
    values_to = "value"
  ) %>%
  filter(value == 1) %>%
  select(word, emotion) %>%
  # Filtriramo opće sentimente PRIJE prevođenja
  filter(emotion != "Positive" & emotion != "Negative") %>%
  # DODAJEMO NOVI KORAK: Prevođenje stupca 'emotion'
  mutate(emotion = recode(emotion, !!!emotion_translator_hr))

nrc_lexicon_long_ <- read_excel("C:/Users/Lukas/Dropbox/Mislav@Luka/lilaHR_clean_long.xlsx", sheet = "Sheet1") %>% select (-"...1") 

```

```{r load-lexicons, echo=FALSE, message=FALSE, warning=FALSE}
# --- FAZA 1: UČITAVANJE I PRIPREMA SVIH LEKSIKONA ---
# Ovaj chunk učitava sve potrebne jezične resurse i pretvara ih u "uredan" (tidy)
# format spreman za spajanje s lingvističkim podacima.
# Ključni koraci su forsiranje UTF-8 kodiranja i standardizacija formata.

# --- 1.1: CroSentilex (fina skala sentimenata) ---
# Učitavamo pozitivne i negativne liste i odmah ih spajamo u jedan leksikon
# sa standardiziranom numeričkom skalom.
crosentilex_full <- bind_rows(
  # Učitavanje negativnih riječi
  read.delim("C:/Users/Lukas/Dropbox/Mislav@Luka/crosentilex-negatives.txt",
             header = FALSE, sep = " ", stringsAsFactors = FALSE, fileEncoding = "UTF-8") %>%
    rename(word = "V1", sentiment_value = "V2") %>%
    mutate(sentiment_value = -sentiment_value), # Pretvaramo score u negativan
  
  # Učitavanje pozitivnih riječi
  read.delim("C:/Users/Lukas/Dropbox/Mislav@Luka/crosentilex-positives.txt",
             header = FALSE, sep = " ", stringsAsFactors = FALSE, fileEncoding = "UTF-8") %>%
    rename(word = "V1", sentiment_value = "V2") # Score je već pozitivan
) %>%
  as_tibble() # Pretvaramo u tibble radi bolje konzistentnosti

# --- 1.2: CroSentilex-Gold (kategorički sentiment) ---
# Učitavamo "zlatni standard" i pretvaramo tekstualne oznake u numeričku skalu (-1, 0, 1).
crosentilex_gold_prepared <- read.delim2("C:/Users/Lukas/Dropbox/Mislav@Luka/gs-sentiment-annotations.txt",
                                         header = FALSE, sep = " ", stringsAsFactors = FALSE, fileEncoding = "UTF-8") %>%
  rename(word = "V1", sentiment_str = "V2") %>%
  mutate(
    sentiment_value = case_when(
      sentiment_str == "+" ~ 1,
      sentiment_str == "-" ~ -1,
      TRUE ~ 0
    )
  ) %>%
  select(word, sentiment_value) %>%
  as_tibble()

# --- 1.3: NRC Leksikon Emocija (za psihološke procese) ---
# Učitavamo NRC leksikon, pretvaramo ga u "dugi" format i prevodimo na hrvatski.
nrc_lexicon_raw <- read_excel("C:/Users/Lukas/Dropbox/Mislav@Luka/lilaHR_clean.xlsx", sheet = "Sheet1") %>% 
                   select(-"...1") %>%
                   rename(word = HR)

# Rječnik za prevođenje engleskih naziva emocija
emotion_translator_hr <- c(
  "Anger" = "Ljutnja", "Anticipation" = "Iščekivanje", "Disgust" = "Gađenje",
  "Fear" = "Strah", "Joy" = "Radost", "Sadness" = "Tuga",
  "Surprise" = "Iznenađenje", "Trust" = "Povjerenje"
)

# Transformacija u dugi, prevedeni format
nrc_lexicon_long <- nrc_lexicon_raw %>% 
  pivot_longer(
    cols = all_of(names(emotion_translator_hr)), # Koristimo samo 8 glavnih emocija
    names_to = "emotion",
    values_to = "value"
  ) %>%
  filter(value == 1) %>% # Zadržavamo samo postojeće veze riječ-emocija
  mutate(emotion = recode(emotion, !!!emotion_translator_hr)) %>% # Prevodimo na hrvatski
  select(word, emotion)

# --- Provjera Učitanih Leksikona (opcionalno) ---
# print("Primjer CroSentilex-Full:")
# print(head(crosentilex_full))
# print("Primjer CroSentilex-Gold Prepared:")
# print(head(crosentilex_gold_prepared))
# print("Primjer NRC Long:")
# print(head(nrc_lexicon_long))
```

```{r , echo=FALSE, message=FALSE, warning=FALSE}
# --- MODUL ZA MREŽU NARATIVNE ATMOSFERE (ISPRAVLJENA I POBOLJŠANA VERZIJA) ---
library(widyr)
library(ggraph)
library(igraph)
library(textreg)


# 1. KORAK: Izračun frekvencija riječi iz 'nlp_results_df'
lemmatized_words_with_freq <- nlp_results_df %>%
  # Brojimo koliko se puta svaka lema pojavljuje u svakom dokumentu
  count(doc_id, lemma, name = "word_frequency")

# 2. KORAK: Izračun Sentiment Score-a (CroSentilex-Gold)
document_sentiments_gold <- lemmatized_words_with_freq %>%
  inner_join(crosentilex_gold_prepared, by = c("lemma" = "word")) %>%
  mutate(
    sentiment_value = as.numeric(sentiment_value),
    word_frequency = as.numeric(word_frequency)
  ) %>%
  group_by(doc_id) %>%
  summarise(sentiment_score_gold = sum(sentiment_value * word_frequency, na.rm = TRUE)) %>%
  ungroup()


# 3. KORAK: Izračun Indeksa Konfliktnog Jezika (CLI)
conflict_lexicon <- unique(c(
  (nrc_lexicon_long %>% filter(emotion %in% c("Ljutnja", "Gađenje", "Strah")) %>% pull(word)),
  (crosentilex_full %>% filter(sentiment_value <= -0.75) %>% pull(word)),
  c("laž", "skandal", "napad", "radikalan", "ideologija", "licemjerje", "sramotno", "mržnja", "podjela", "raskol", "manipulacija", "propaganda", "ekstrem", "kontroverz", "sukob", "kriza")
))

cli_scores <- lemmatized_words_with_freq %>%
  mutate(is_conflict = lemma %in% conflict_lexicon) %>%
  group_by(doc_id) %>%
  summarise(
    total_words = sum(word_frequency),
    conflict_words = sum(word_frequency[is_conflict])
  ) %>%
  mutate(cli = (conflict_words / total_words) * 1000) %>%
  ungroup()

# 4. KORAK: Spajanje SVIH metrika u jedan 'dta_final' dataframe
dta_final <- dta_enriched %>%
  left_join(document_sentiments_gold, by = "doc_id") %>%
  left_join(cli_scores %>% select(doc_id, cli), by = "doc_id") %>%
  mutate(
    sentiment_score_gold = ifelse(is.na(sentiment_score_gold), 0, sentiment_score_gold),
    cli = ifelse(is.na(cli), 0, cli)
  )


# 5. KORAK: Izračun Relativnog Indeksa Konflikta (RCI)
avg_cli_media <- dta_final %>% group_by(FROM) %>% summarise(avg_cli_media = mean(cli))
avg_cli_topic <- dta_final %>% group_by(dominant_topic) %>% summarise(avg_cli_topic = mean(cli))

dta_final <- dta_final %>%
  left_join(avg_cli_media, by = "FROM") %>%
  left_join(avg_cli_topic, by = "dominant_topic") %>%
  mutate(
    expected_cli = 0.5 * avg_cli_media + 0.5 * avg_cli_topic,
    rci = cli - expected_cli
  )


# --- ANALIZA MREŽE NARATIVNE ATMOSFERE ---

# 6. KORAK: Identifikacija dokumenata s više tema
mixed_topic_docs <- dta_final %>%
  select(doc_id, starts_with("norm_")) %>%
  pivot_longer(-doc_id, names_to = "topic", values_to = "intensity") %>%
  mutate(topic = str_remove(topic, "norm_")) %>%
  filter(intensity > 1.5) %>%
  add_count(doc_id) %>%
  filter(n >= 2) %>%
  select(doc_id, topic)

# 7. KORAK: Izoliranje atmosfere za relevantne dokumente
atmosphere_of_mixed_docs <- dta_final %>%
  filter(doc_id %in% unique(mixed_topic_docs$doc_id)) %>%
  select(doc_id, sentiment_score = sentiment_score_gold, rci)

# 8. KORAK: Efikasno računanje ko-okurencija i atmosfere parova
pair_data <- mixed_topic_docs %>%
  inner_join(atmosphere_of_mixed_docs, by = "doc_id")

narrative_pairs <- pair_data %>%
  pairwise_count(item = topic, feature = doc_id, upper = FALSE)


# document_topic_pairs <- pair_data %>%
#   # Stvaramo parove unutar svakog dokumenta
#   pairwise_count(item = topic, feature = doc_id, upper = FALSE) %>%
#   # Spajamo s originalnim podacima da bismo dobili atmosferu za svaki DOKUMENT u kojem se par pojavio
#   inner_join(atmosphere_of_mixed_docs, by = c("feature" = "doc_id"))


narrative_pair_data <- dta_final %>%
  # Odabiremo samo potrebne stupce
  select(doc_id, sentiment_score_gold, rci, starts_with("norm_")) %>%
  # Pretvaramo u dugi format
  pivot_longer(
    cols = starts_with("norm_"),
    names_to = "topic",
    values_to = "intensity"
  ) %>%
  # Uklanjamo prefiks 'norm_'
  mutate(topic = str_remove(topic, "norm_")) %>%
  # Zadržavamo samo jake teme
  filter(intensity > 1.5) %>%
  # KLJUČNI DIO: Spajamo dataframe sam sa sobom da stvorimo parove
  inner_join(., ., by = "doc_id") %>%
  # Zadržavamo samo jedinstvene parove (npr. izbjegavamo A-B i B-A)
  filter(topic.x < topic.y) %>%
  # Sada imamo dataframe gdje svaki redak predstavlja par tema u jednom dokumentu
  # i imamo atmosferu tog dokumenta
  select(doc_id, 
         item1 = topic.x, 
         item2 = topic.y, 
         sentiment_score = sentiment_score_gold.x, # .x jer su se imena duplicirala
         rci = rci.x)


graph_data <- narrative_pair_data %>%
  group_by(item1, item2) %>%
  summarise(
    n = n(), # Brojimo koliko se puta par pojavio
    avg_sentiment = mean(sentiment_score, na.rm = TRUE),
    avg_rci = mean(rci, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  filter(n > 10) # Zadržavamo samo parove s dovoljno članaka



set.seed(123)
graph_from_data_frame(graph_data, directed = FALSE) %>%
  ggraph(layout = "fr") +
    geom_edge_fan(
      aes(
        color = avg_sentiment, 
        width = avg_rci,
        alpha = n
      ), 
      arrow = NULL
    ) +
    geom_node_point(color = "black", size = 10) +
    geom_node_text(aes(label = str_wrap(name, 15)), color = "black", size = 3.5) +
    scale_edge_color_gradient2(
      low = "firebrick", mid = "lightgrey", high = "steelblue", midpoint = 0, 
      name="Prosj. sentiment\nnarativnog okvira"
    ) +
    scale_edge_width(
      range = c(1, 4), 
      name="Prosj. intenzitet konflikta (RCI)"
    ) +
    scale_edge_alpha(
      range = c(0.3, 1),
      name = "Broj članaka\n(Pouzdanost veze)"
    ) +
    theme_graph(base_family = "sans") +
    labs(
      title = "Mreža narativne atmosfere",
      subtitle = "Boja veze = tonalitet | Debljina veze = konflikt | Prozirnost veze = oouzdanost"
    )



```

:::

---

## Operativna razina


::: {.panel-tabset}
#### Koncept

Analiza 20k medijskih objava o Croatian National Bank otkriva zanimljivu sliku o njezinom javnom identitetu. To je priča o dva različita svijeta koji se rijetko dodiruju... sve dok ih ključna tema ne prisili na to. Inflacija, od monetarnog do medijskog fenomena!

#### Kada I

Metodologija je fleksibilna i može se proširiti na praćenje različitih sektora:

- > **Financijska stabilnost:** Praćenje sentimenta prema bankarskom sektoru ili tržištu nekretnina (`banke`, `kredit`, `nekretnine`).

- > **Tržište rada:** Praćenje rasprava o traženju posla, otkazima i pritiscima na plaće.

- > **Regionalna analiza:** Korištenje geolokacijskih podataka za uvid u regionalne ekonomske nejednakosti.

#### Kada II

#### Gdje 

#### Što

:::

---

## Istraživačka razina


::: {.panel-tabset}
#### Koncept

Literatura o komunikaciji središnjih banaka je značajna i vrlo aktualna. Nekoliko  je istraživačkih pravaca koji se ističu:
inflacija, nowcasting, komunikacija sa ne-stručnjacima, komunikacija kao transmisijski kanal

#### Inflacija

Metodologija je fleksibilna i može se proširiti na praćenje različitih sektora:

- > **Financijska stabilnost:** Praćenje sentimenta prema bankarskom sektoru ili tržištu nekretnina (`banke`, `kredit`, `nekretnine`).

- > **Tržište rada:** Praćenje rasprava o traženju posla, otkazima i pritiscima na plaće.

- > **Regionalna analiza:** Korištenje geolokacijskih podataka za uvid u regionalne ekonomske nejednakosti.

#### Indeks konflikta


:::





---

## Prijedlog projekta

Naš prijedlog je fokusiran, 6-mjesečni pilot za dokazivanje vrijednosti ovog pristupa.

-   **Cilj:** Razviti i testirati prototip indeksa sentimenta inflacije u stvarnom vremenu za Hrvatsku.

-   **Opseg:**
    -   *Izvori podataka:* 2-3 glavna hrvatska news portala i Google Trends.
    -   *Vremenski okvir:* Povijesna analiza (zadnjih 5 godina) i praćenje uživo.
    -   *Validacija:* Usporedba indeksa s HNB-ovim anketama potrošača i službenim HICP podacima.


---

## Isporuke i Ishodi

Po završetku pilota, HNB će dobiti:

-   **Potpuno dokumentiranu i ponovljivu R kodnu bazu.**
-   **Validacijski izvještaj** koji detaljno opisuje statistička svojstva indeksa.
-   **Interaktivni prototip Quarto nadzorne ploče** za internu upotrebu.
-   **Završnu prezentaciju** nalaza i preporuka za daljnji razvoj.

---

## Potrebni resursi

Ovaj projekt je dizajniran da bude agilan i visoko kolaborativan.

#### Tim
-   1-2 podatkovna znanstvenika / ekonomista.
-   Kontakt točka iz odjela za istraživanje HNB-a.

#### Tehnologija
-   Standardni računalni resursi.
-   Nije potreban specijalizirani hardver za pilot fazu.

#### Podatci
-   Cijeli medijski prostor (Determ).
-   Povijesni medijski podaatci o HNB.


---

## Umjesto zaključka./ Pitanja?
<br><br>
**Kontakt:**

-   [Luka Šikić](https://www.unicath.hr/odjeli-i-fakultet/nastavnici/luka-sikic)
-   luka.sikic@unicath.hr
-   [linkedin](https://www.linkedin.com/in/luka-sikic-662ba869/)
