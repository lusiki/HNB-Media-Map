# Koristimo minimalnu temu i mičemo legendu jer je suvišna (boje odgovaraju osi x)
theme_minimal() +
theme(legend.position = "none",
panel.grid.major.x = element_blank())
top_mediji_po_vrsti <- df_clean %>%
filter(!is.na(`Vrsta medija`) & !is.na(Medij)) %>%
group_by(`Vrsta medija`, Medij) %>%
summarise(Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE), .groups = "drop") %>%
# Sada ponovno grupiramo samo po Vrsti medija
group_by(`Vrsta medija`) %>%
# Uzimamo Top 10 medija UNUTAR svake grupe (Vrste medija)
slice_max(order_by = Ukupna_Vrijednost, n = 10) %>%
ungroup() %>%
# Ključni korak: Kreiramo novu, sortabilnu os
# Ovo lijepi npr. "Tisak" na ime medija da bi se mogli sortirati neovisno
mutate(
Medij_reordered = reorder_within(Medij, Ukupna_Vrijednost, `Vrsta medija`)
)
# --- 2. Crtanje Facet Grafikona ---
graf_top_mediji_faceted <- top_mediji_po_vrsti %>%
ggplot(aes(x = Ukupna_Vrijednost, y = Medij_reordered, fill = `Vrsta medija`)) +
geom_col() +
# Ova funkcija čisti labele koje je reorder_within napravio
scale_y_reordered() +
# Formatiramo X-os
scale_x_continuous(labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ",")) +
# Kreiramo facete, po jednu za svaku 'Vrsta medija'
# scales = "free" omogućuje da svaka faceta ima svoju Y-os i X-os
facet_wrap(~ `Vrsta medija`, scales = "free") +
labs(
title = "Top 10 medija po ukupnoj medijskoj vrijednosti (€)",
subtitle = "Prikazano po vrsti medija",
x = "Ukupna vrijednost (€)",
y = "Medij"
) +
# Mičemo legendu jer su naslovi faceta i boje sada suvišni
theme_minimal() +
theme(
legend.position = "none",
panel.grid.major.y = element_blank(), # Čišći izgled
strip.text = element_text(face = "bold", size = 11) # Ističemo naslove faceta
)
graf_top_mediji_faceted
top_autori_data <- df_clean %>%
# Filtriramo samo retke gdje Autor nije NA (prazno)
filter(!is.na(Autor)) %>%
# Grupiramo po Autoru
group_by(Autor) %>%
summarise(
Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE)
) %>%
# Uzimamo Top 15 autora po ukupnoj vrijednosti
slice_max(order_by = Ukupna_Vrijednost, n = 15) %>%
ungroup()
# --- 2. Crtanje grafikona ---
graf_top_autori <- top_autori_data %>%
# Sortiramo autore po ukupnoj vrijednosti
ggplot(aes(x = Ukupna_Vrijednost, y = fct_reorder(Autor, Ukupna_Vrijednost))) +
# Koristimo tamno zelenu boju
geom_col(fill = "#005F56") +
# Dodajemo tekstualne labele s vrijednošću
geom_text(
aes(label = scales::comma(Ukupna_Vrijednost, suffix = " €", big.mark = ".", decimal.mark = ",")),
hjust = -0.05,  # Pozicionira tekst malo desno od stupca
size = 3.5,
color = "black"
) +
# Formatiramo X-os
scale_x_continuous(
labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ","),
# Proširujemo os (za 25%) da stane tekstualna labela
expand = expansion(mult = c(0, 0.25))
) +
labs(
title = "Top 15 autora po ukupnoj medijskoj vrijednosti (€)",
subtitle = "Ukupna vrijednost objava po autoru",
x = "Ukupna vrijednost (€)",
y = "Autor"
) +
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank()
)
graf_top_autori
# --- 1. Priprema podataka s kraćim nazivima ---
top_teme_data <- df_clean %>%
filter(!is.na(Tema) & Tema != "") %>%
group_by(Tema) %>%
summarise(Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE), .groups = "drop") %>%
slice_max(order_by = Ukupna_Vrijednost, n = 15) %>%
# --- OVDJE JE IZMJENA ---
# Kreiramo novu varijablu 'Kratka_Tema'
mutate(
# Brojimo riječi (bilo koji niz znakova koji nije razmak)
broj_rijeci = str_count(Tema, "\\S+"),
# Ako ima više od 4 riječi, skrati i dodaj "..."
# inače, ostavi kako je. Funkcija word() uzima prvih 'n' riječi.
Kratka_Tema = ifelse(broj_rijeci > 4,
paste(word(Tema, 1, 4, sep = " "), "..."),
Tema)
)
# --- 2. Crtanje grafikona (s novom varijablom) ---
graf_top_teme_kratko <- top_teme_data %>%
# Koristimo 'Kratka_Tema' za Y os, ali je sortiramo po 'Ukupna_Vrijednost'
ggplot(aes(x = Ukupna_Vrijednost, y = fct_reorder(Kratka_Tema, Ukupna_Vrijednost))) +
geom_col(fill = "#C00000") +
# Dodajemo tekstualnu labelu s punom vrijednosti
geom_text(
aes(label = scales::comma(Ukupna_Vrijednost, suffix = " €", big.mark = ".", decimal.mark = ",")),
hjust = -0.05,
size = 3.5,
color = "black"
) +
scale_x_continuous(
labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ","),
# Proširujemo os (za 25%) da stane tekst
expand = expansion(mult = c(0, 0.25))
) +
labs(
title = "Top 15 tema po ukupnoj medijskoj vrijednosti (€)",
subtitle = "Ukupna vrijednost objava po temi (nazivi skraćeni na max. 4 riječi)", # Ažuriran podnaslov
x = "Ukupna vrijednost (€)",
y = "Tema"
) +
# Koristimo temu iz prethodnih primjera
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank()
)
graf_top_teme_kratko
topic_palette <- c(
"#003366",  # Dark Blue
"#5B9BD5",  # Medium Blue
"#C00000",  # Accent Red
"#BF8F00",  # Accent Gold
"#005F56",  # Dark Green
"#A0522D",  # Muted Sienna
"#7F7F7F",  # Medium Grey
"#8A798C"   # Muted Mauve
)
# --- 2. Priprema podataka (iz vašeg koda) ---
# Pretpostavka: df_clean već postoji i obrađen je
vrsta_medija_data <- df_clean %>%
group_by(`Vrsta medija`) %>%
summarise(Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE))
# --- 3. Kreiranje grafikona (s primijenjenom temom i paletom) ---
graf_3_stupcasti_themed <- vrsta_medija_data %>%
# Mapiramo estetiku
ggplot(aes(x = fct_reorder(`Vrsta medija`, Ukupna_Vrijednost, .desc = TRUE),
y = Ukupna_Vrijednost,
fill = `Vrsta medija`)) +
# Stupci (širina iz naučenog primjera)
geom_col(width = 0.8) +
# Tekstualne labele (veličina iz naučenog primjera)
geom_text(aes(label = scales::comma(Ukupna_Vrijednost, suffix = " €", big.mark = ".", decimal.mark = ",")),
vjust = -0.5,
color = "black",
size = 4) +
# Prilagođavamo Y-os da stane tekst (slično expand_limits)
scale_y_continuous(labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ","),
expand = expansion(mult = c(0, 0.15))) +
# --- PRIMJENA NAUČENE PALETE ---
scale_fill_manual(values = topic_palette) +
# Labele
labs(
title = "Ukupna medijska vrijednost (€) po vrsti medija",
subtitle = "Usporedba ukupne vrijednosti objava po vrstama medija",
x = "Vrsta medija",
y = "Ukupna vrijednost (€)"
) +
# --- PRIMJENA NAUČENE TEME ---
theme_minimal(base_size = 14) +
theme(
legend.position = "none",                # Uklanja legendu (kako je traženo)
panel.grid.major.x = element_blank(),    # Uklanja vertikalne linije
panel.grid.minor.y = element_blank()     # Uklanja sitne horizontalne linije
)
graf_3_stupcasti_themed
op_mediji_po_vrsti <- df_clean %>%
filter(!is.na(`Vrsta medija`) & !is.na(Medij)) %>%
group_by(`Vrsta medija`, Medij) %>%
summarise(Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE), .groups = "drop") %>%
group_by(`Vrsta medija`) %>%
slice_max(order_by = Ukupna_Vrijednost, n = 10) %>%
ungroup() %>%
mutate(
Medij_reordered = reorder_within(Medij, Ukupna_Vrijednost, `Vrsta medija`)
)
# --- 3. Crtanje Facet Grafikona (s primijenjenom temom) ---
graf_top_mediji_faceted_themed <- top_mediji_po_vrsti %>%
ggplot(aes(x = Ukupna_Vrijednost, y = Medij_reordered, fill = `Vrsta medija`)) +
# Stupci (širina iz naučenog stila)
geom_col(width = 0.8) +
# Tekstualne labele (iz naučenog stila)
geom_text(
aes(label = scales::comma(Ukupna_Vrijednost, suffix = " €", big.mark = ".", decimal.mark = ",")),
hjust = -0.05,
size = 3.5, # Malo manja veličina zbog faceta
color = "black"
) +
# Čišćenje Y-osi
scale_y_reordered() +
# Formatiranje X-osi (s prostorom za labele)
scale_x_continuous(
labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ","),
expand = expansion(mult = c(0, 0.25)) # Proširujemo os da stane tekst
) +
# --- PRIMJENA NAUČENE PALETE ---
scale_fill_manual(values = topic_palette) +
# Facete (iz vašeg koda)
facet_wrap(~ `Vrsta medija`, scales = "free") +
# Labele (iz vašeg koda)
labs(
title = "Top 10 medija po ukupnoj medijskoj vrijednosti (€)",
subtitle = "Prikazano po vrsti medija",
x = "Ukupna vrijednost (€)",
y = "Medij"
) +
# --- PRIMJENA NAUČENE TEME ---
theme_minimal(base_size = 14) + # Osnovna veličina iz naučenog stila
theme(
legend.position = "none",                # Uklanja legendu
panel.grid.major.y = element_blank(),    # Uklanja horizontalne linije
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey90"), # Ostavljamo suptilne vertikalne
strip.text = element_text(face = "bold", size = 12) # Ističemo naslove faceta
)
graf_top_mediji_faceted
graf_top_mediji_faceted_themed
top_autori_data <- df_clean %>%
filter(!is.na(Autor)) %>%
group_by(Autor) %>%
summarise(
Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE)
) %>%
slice_max(order_by = Ukupna_Vrijednost, n = 15) %>%
ungroup()
# --- 3. Crtanje grafikona (s primijenjenom temom) ---
graf_top_autori_themed <- top_autori_data %>%
# --- IZMJENA: 'Autor' je sada mapiran na 'fill' ---
ggplot(aes(x = Ukupna_Vrijednost,
y = fct_reorder(Autor, Ukupna_Vrijednost),
fill = Autor)) +
# Stupci (širina iz naučenog stila, maknut statični fill)
geom_col(width = 0.8) +
# Tekstualne labele (veličina iz naučenog stila)
geom_text(
aes(label = scales::comma(Ukupna_Vrijednost, suffix = " €", big.mark = ".", decimal.mark = ",")),
hjust = -0.05,
size = 4,
color = "black"
) +
# Formatiranje X-osi (iz vašeg koda)
scale_x_continuous(
labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ","),
expand = expansion(mult = c(0, 0.25))
) +
# --- DODANO: Primjena naučene palete boja ---
scale_fill_manual(values = topic_palette) +
# Labele (iz vašeg koda)
labs(
title = "Top 15 autora po ukupnoj medijskoj vrijednosti (€)",
subtitle = "Ukupna vrijednost objava po autoru",
x = "Ukupna vrijednost (€)",
y = "Autor"
) +
# --- IZMJENA: Primjena naučenog stila teme ---
theme_minimal(base_size = 14) +
theme(
legend.position = "none",                # Uklanja legendu (kako je traženo)
panel.grid.major.y = element_blank(),    # Uklanja horizontalne linije
panel.grid.minor.x = element_blank()     # Uklanja sitne vertikalne linije
)
graf_top_autori_themed
# --- 1. Priprema podataka s kraćim nazivima ---
top_autori_data <- df_clean %>%
filter(!is.na(Autor)) %>%
group_by(Autor) %>%
summarise(
Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE)
) %>%
slice_max(order_by = Ukupna_Vrijednost, n = 15) %>%
ungroup()
graf_top_autori_single_color
# --- 2. Crtanje grafikona (s jednom bojom) ---
# Ovdje NE mapiramo 'fill' u aes(), nego ga postavljamo statički u geom_col()
graf_top_autori_single_color <- top_autori_data %>%
ggplot(aes(x = Ukupna_Vrijednost,
y = fct_reorder(Autor, Ukupna_Vrijednost))) +
# --- IZMJENA: 'fill' je postavljen na statičnu boju iz vaše palete ---
geom_col(fill = "#005F56", width = 0.8) + # Tamno zelena
geom_text(
aes(label = scales::comma(Ukupna_Vrijednost, suffix = " €", big.mark = ".", decimal.mark = ",")),
hjust = -0.05,
size = 4,
color = "black"
) +
scale_x_continuous(
labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ","),
expand = expansion(mult = c(0, 0.25))
) +
labs(
title = "Top 15 autora po ukupnoj medijskoj vrijednosti (€)",
subtitle = "Ukupna vrijednost objava po autoru",
x = "Ukupna vrijednost (€)",
y = "Autor"
) +
# --- Primjena naučenog stila teme ---
theme_minimal(base_size = 14) +
theme(
legend.position = "none", # Legenda nije ni potrebna
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank()
)
graf_top_autori_single_color
# --- 1. Priprema podataka s kraćim nazivima ---
top_teme_data <- df_clean %>%
filter(!is.na(Tema) & Tema != "") %>%
group_by(Tema) %>%
summarise(Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE), .groups = "drop") %>%
slice_max(order_by = Ukupna_Vrijednost, n = 15) %>%
# --- OVDJE JE IZMJENA ---
# Kreiramo novu varijablu 'Kratka_Tema'
mutate(
# Brojimo riječi (bilo koji niz znakova koji nije razmak)
broj_rijeci = str_count(Tema, "\\S+"),
# Ako ima više od 4 riječi, skrati i dodaj "..."
# inače, ostavi kako je. Funkcija word() uzima prvih 'n' riječi.
Kratka_Tema = ifelse(broj_rijeci > 4,
paste(word(Tema, 1, 4, sep = " "), "..."),
Tema)
)
# --- 2. Crtanje grafikona (s novom varijablom) ---
graf_top_teme_kratko <- top_teme_data %>%
# Koristimo 'Kratka_Tema' za Y os, ali je sortiramo po 'Ukupna_Vrijednost'
ggplot(aes(x = Ukupna_Vrijednost, y = fct_reorder(Kratka_Tema, Ukupna_Vrijednost))) +
geom_col(fill = "#C00000") +
# Dodajemo tekstualnu labelu s punom vrijednosti
geom_text(
aes(label = scales::comma(Ukupna_Vrijednost, suffix = " €", big.mark = ".", decimal.mark = ",")),
hjust = -0.05,
size = 3.5,
color = "black"
) +
scale_x_continuous(
labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ","),
# Proširujemo os (za 25%) da stane tekst
expand = expansion(mult = c(0, 0.25))
) +
labs(
title = "Top 15 tema po ukupnoj medijskoj vrijednosti (€)",
subtitle = "Ukupna vrijednost objava po temi (nazivi skraćeni na max. 4 riječi)", # Ažuriran podnaslov
x = "Ukupna vrijednost (€)",
y = "Tema"
) +
# Koristimo temu iz prethodnih primjera
theme_minimal() +
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank()
)
graf_top_teme_kratko
top_autori_data <- df_clean %>%
filter(!is.na(Autor)) %>%
group_by(Autor) %>%
summarise(
Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE)
) %>%
slice_max(order_by = Ukupna_Vrijednost, n = 15) %>%
ungroup()
# --- 2. Crtanje grafikona (s jednom bojom) ---
# Ovdje NE mapiramo 'fill' u aes(), nego ga postavljamo statički u geom_col()
graf_top_autori_single_color <- top_autori_data %>%
ggplot(aes(x = Ukupna_Vrijednost,
y = fct_reorder(Autor, Ukupna_Vrijednost))) +
# --- IZMJENA: 'fill' je postavljen na statičnu boju iz vaše palete ---
geom_col(fill = "#005F56", width = 0.8) + # Tamno zelena
geom_text(
aes(label = scales::comma(Ukupna_Vrijednost, suffix = " €", big.mark = ".", decimal.mark = ",")),
hjust = -0.05,
size = 4,
color = "black"
) +
scale_x_continuous(
labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ","),
expand = expansion(mult = c(0, 0.25))
) +
labs(
title = "Top 15 autora po ukupnoj medijskoj vrijednosti (€)",
subtitle = "Ukupna vrijednost objava po autoru",
x = "Ukupna vrijednost (€)",
y = "Autor"
) +
# --- Primjena naučenog stila teme ---
theme_minimal(base_size = 14) +
theme(
legend.position = "none", # Legenda nije ni potrebna
panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank()
)
graf_top_autori_themed
graf_top_autori_single_color
sentiment_palette <- c(
"Negativna" = "#C00000",  # Accent Red
"Pozitivna" = "#005F56",  # Dark Green
"Neutralna" = "#7F7F7F"   # Medium Grey
)
# --- 2. Postavljanje naučene TEME za grafikone ---
theme_set(
theme_minimal(base_size = 14) +
theme(
legend.position = "bottom",               # Legenda je ovdje važna
panel.grid.major.y = element_blank(),     # Uklanja horizontalne linije
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(color = "grey90"), # Ostavlja suptilne vertikalne
plot.title = element_text(face = "bold", size = 16)
)
)
# ===================================================================
#   GRAFIKON 1: TOP 15 TEMA PO VRIJEDNOSTI I SENTIMENTU
# ===================================================================
# --- 1a. Priprema podataka za Teme ---
# Prvo, pronalazimo Top 15 tema po UKUPNOJ vrijednosti
top_15_teme_lista <- df_clean %>%
filter(!is.na(Tema) & Tema != "" & !is.na(`Događajna orijentacija`)) %>%
# Kreiramo skraćene nazive tema (max 4 riječi)
mutate(
Kratka_Tema = ifelse(str_count(Tema, "\\S+") > 4,
paste(word(Tema, 1, 4, sep = " "), "..."),
Tema)
) %>%
group_by(Kratka_Tema) %>%
summarise(Ukupna_Vrijednost_Total = sum(Vrijednost_EUR, na.rm = TRUE)) %>%
slice_max(order_by = Ukupna_Vrijednost_Total, n = 15) %>%
pull(Kratka_Tema) # Izvuci samo imena
# Sada pripremamo podatke za grafikon, grupirane po temi I sentimentu
teme_po_sentimentu_data <- df_clean %>%
filter(!is.na(`Događajna orijentacija`) & `Događajna orijentacija` != "") %>%
# Kreiramo skraćene nazive tema
mutate(
Kratka_Tema = ifelse(str_count(Tema, "\\S+") > 4,
paste(word(Tema, 1, 4, sep = " "), "..."),
Tema)
) %>%
# Filtriramo samo one teme koje su u naših Top 15
filter(Kratka_Tema %in% top_15_teme_lista) %>%
# Grupiramo po temi I sentimentu
group_by(Kratka_Tema, `Događajna orijentacija`) %>%
summarise(Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE), .groups = "drop")
# --- 1b. Crtanje grafikona za Teme ---
graf_teme_po_sentimentu <- teme_po_sentimentu_data %>%
ggplot(aes(
# Sortiramo Y-os po ukupnoj vrijednosti (zbrajamo sve sentimente za taj red)
y = fct_reorder(Kratka_Tema, Ukupna_Vrijednost, .fun = sum, .desc = FALSE),
x = Ukupna_Vrijednost,
fill = `Događajna orijentacija`
)) +
# Koristimo geom_col() za stacked bar chart
geom_col(width = 0.8) +
# Primjenjujemo našu definiranu paletu za sentiment
scale_fill_manual(values = sentiment_palette) +
scale_x_continuous(
labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ","),
expand = expansion(mult = c(0, 0.05)) # Malo prostora na desno
) +
labs(
title = "Vrijednost Top 15 Tema po Sentimentu",
subtitle = "Ukupna medijska vrijednost (€) raščlanjena po događajnoj orijentaciji",
x = "Ukupna vrijednost (€)",
y = "Tema (skraćena na 4 riječi)",
fill = "Sentiment:"
)
graf_teme_po_sentimentu
top_15_autori_lista <- df_clean %>%
filter(!is.na(Autor) & !is.na(`Događajna orijentacija`)) %>%
group_by(Autor) %>%
summarise(Ukupna_Vrijednost_Total = sum(Vrijednost_EUR, na.rm = TRUE)) %>%
slice_max(order_by = Ukupna_Vrijednost_Total, n = 15) %>%
pull(Autor) # Izvuci samo imena
# Sada pripremamo podatke za grafikon, grupirane po autoru I sentimentu
autori_po_sentimentu_data <- df_clean %>%
filter(!is.na(Autor) & !is.na(`Događajna orijentacija`) & `Događajna orijentacija` != "") %>%
# Filtriramo samo one autore koji su u naših Top 15
filter(Autor %in% top_15_autori_lista) %>%
# Grupiramo po autoru I sentimentu
group_by(Autor, `Događajna orijentacija`) %>%
summarise(Ukupna_Vrijednost = sum(Vrijednost_EUR, na.rm = TRUE), .groups = "drop")
# --- 2b. Crtanje grafikona za Autore ---
graf_autori_po_sentimentu <- autori_po_sentimentu_data %>%
ggplot(aes(
# Sortiramo Y-os po ukupnoj vrijednosti
y = fct_reorder(Autor, Ukupna_Vrijednost, .fun = sum, .desc = FALSE),
x = Ukupna_Vrijednost,
fill = `Događajna orijentacija`
)) +
geom_col(width = 0.8) +
# Primjenjujemo našu definiranu paletu za sentiment
scale_fill_manual(values = sentiment_palette) +
scale_x_continuous(
labels = label_comma(suffix = " €", big.mark = ".", decimal.mark = ","),
expand = expansion(mult = c(0, 0.05)) # Malo prostora na desno
) +
labs(
title = "Vrijednost Top 15 Autora po Sentimentu",
subtitle = "Ukupna medijska vrijednost (€) raščlanjena po događajnoj orijentaciji",
x = "Ukupna vrijednost (€)",
y = "Autor",
fill = "Sentiment:"
)
graf_autori_po_sentimentu
