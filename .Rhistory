arrange(desc(z_score_volume))
cli_spike_dates <- spikes_detected_z %>%
filter(is_cli_spike) %>%
select(date, avg_cli, z_score_cli) %>%
arrange(desc(z_score_cli))
# # (Ovaj dio ispod će ispisati tablice direktno u vaš HTML dokument)
# cat("### Dani s Ekstremnim Volumom Objava\n\n")
# knitr::kable(volume_spike_dates, caption = "Top datumi rangirani po Z-scoreu volumena.")
#
# cat("\n### Dani s Ekstremnim Intenzitetom Konflikta\n\n")
# knitr::kable(cli_spike_dates, caption = "Top datumi rangirani po Z-scoreu konflikta.")
# --- VIZUALIZACIJA STANDARDIZIRANIH VRIJEDNOSTI ---
p_volume_z <- ggplot(spikes_detected_z, aes(x = date, y = z_score_volume)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected_z, is_volume_spike), color = "red", size = 3) +
geom_hline(yintercept = spike_threshold_z, linetype = "dashed", color = "red") +
theme_minimal() +
labs(
title = "Anomalije u volumenu objava (Standardizirano)",
y = "Odstupanje od prosjeka (u st. dev.)",
x = ""
)
p_cli_z <- ggplot(spikes_detected_z, aes(x = date, y = z_score_cli)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected_z, is_cli_spike), color = "red", size = 3) +
geom_hline(yintercept = spike_threshold_z, linetype = "dashed", color = "red") +
theme_minimal() +
labs(
title = "Anomalije u intenzitetu konflikta (Standardizirano)",
y = "Odstupanje od prosjeka (u st. dev.)",
x = "Datum"
)
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# --- KOD ZA DETEKCIJU ANOMALIJA (POBOLJŠANA VERZIJA) ---
daily_summary <- dta_final %>%
mutate(date = as.Date(DATE)) %>%
group_by(date) %>%
summarise(
n_articles = n(),
avg_cli = mean(cli, na.rm = TRUE)
) %>%
ungroup()
# Računamo pragove (99-i percentil)
volume_threshold <- quantile(daily_summary$n_articles, 0.99)
cli_threshold <- quantile(daily_summary$avg_cli, 0.99)
# Identificiramo "potrese"
spikes_detected <- daily_summary %>%
mutate(
is_volume_spike = n_articles > volume_threshold,
is_cli_spike = avg_cli > cli_threshold
)
# Vizualizacija
p_volume <- ggplot(spikes_detected, aes(x = date, y = n_articles)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected, is_volume_spike), color = "red", size = 3) +
geom_hline(yintercept = volume_threshold, linetype="dashed", color="red") +
theme_minimal() +
labs(title = "Ekstremni volumen objava", y = "Broj članaka dnevno", x = "")
p_cli <- ggplot(spikes_detected, aes(x = date, y = avg_cli)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected, is_cli_spike), color = "red", size = 3) +
geom_hline(yintercept = cli_threshold, linetype="dashed", color="red") +
theme_minimal() +
labs(title = "Ekstremni intenzitet konflikta", y = "Prosječni CLI dnevno", x = "Datum")
#p_volume / p_cli
# --- KOD ZA STANDARDIZIRANU DETEKCIJU ANOMALIJA ---
# Agregiramo podatke po danu
daily_summary <- dta_final %>%
mutate(date = as.Date(DATE),
year = year(date)) %>% # Dodajemo godinu za godišnju standardizaciju
group_by(date, year) %>%
summarise(
n_articles = n(),
avg_cli = mean(cli, na.rm = TRUE),
.groups = "drop"
)
# Standardiziramo vrijednosti (računamo Z-score) unutar svake godine
standardized_summary <- daily_summary %>%
group_by(year) %>%
mutate(
# Z-score = (vrijednost - prosjek) / standardna devijacija
z_score_volume = (n_articles - mean(n_articles)) / sd(n_articles),
z_score_cli = (avg_cli - mean(avg_cli)) / sd(avg_cli)
) %>%
ungroup()
# Definiramo prag za "šiljak" (npr. 3 standardne devijacije)
spike_threshold_z <- 3
# Identificiramo "potrese"
spikes_detected_z <- standardized_summary %>%
mutate(
is_volume_spike = z_score_volume > spike_threshold_z,
is_cli_spike = z_score_cli > spike_threshold_z
)
# --- ISPIS DATUMA S ANOMALIJAMA ---
volume_spike_dates <- spikes_detected_z %>%
filter(is_volume_spike) %>%
select(date, n_articles, z_score_volume) %>%
arrange(desc(z_score_volume))
cli_spike_dates <- spikes_detected_z %>%
filter(is_cli_spike) %>%
select(date, avg_cli, z_score_cli) %>%
arrange(desc(z_score_cli))
# # (Ovaj dio ispod će ispisati tablice direktno u vaš HTML dokument)
# cat("### Dani s Ekstremnim Volumom Objava\n\n")
# knitr::kable(volume_spike_dates, caption = "Top datumi rangirani po Z-scoreu volumena.")
#
# cat("\n### Dani s Ekstremnim Intenzitetom Konflikta\n\n")
# knitr::kable(cli_spike_dates, caption = "Top datumi rangirani po Z-scoreu konflikta.")
# --- VIZUALIZACIJA STANDARDIZIRANIH VRIJEDNOSTI ---
p_volume_z <- ggplot(spikes_detected_z, aes(x = date, y = z_score_volume)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected_z, is_volume_spike), color = "red", size = 3) +
geom_hline(yintercept = spike_threshold_z, linetype = "dashed", color = "red") +
theme_minimal() +
labs(
title = "Anomalije u volumenu objava (Standardizirano)",
y = "Odstupanje od prosjeka (u st. dev.)",
x = ""
)
p_cli_z <- ggplot(spikes_detected_z, aes(x = date, y = z_score_cli)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected_z, is_cli_spike), color = "red", size = 3) +
geom_hline(yintercept = spike_threshold_z, linetype = "dashed", color = "red") +
theme_minimal() +
labs(
title = "Anomalije u intenzitetu konflikta (Standardizirano)",
y = "Odstupanje od prosjeka (u st. dev.)",
x = "Datum"
)
p_volume_z
p_volume_z
p_cli_z
p_cli_z
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# --- KOD ZA "MONETARNI SEIZMOGRAF" ZA EURO KONVERGENCIJU 2022 ---
event_date_euro <- as.Date("2022-06-01") # Pretpostavljamo datum Euro izvještaja
analysis_window_euro <- 21 # Analiziramo 3 tjedna prije i poslije
daily_euro_dynamics <- dta_final %>%
mutate(date = as.Date(DATE)) %>%
group_by(date) %>%
summarise(
# Udio članaka s dominantnom temom EURO_UVOĐENJE
euro_share = mean(dominant_topic == "EURO_UVOĐENJE", na.rm = TRUE),
# Prosječni CLI i sentiment SAMO za članke o euru taj dan
avg_cli = mean(cli[dominant_topic == "EURO_UVOĐENJE"], na.rm = TRUE),
avg_sentiment = mean(sentiment_score[dominant_topic == "EURO_UVOĐENJE"], na.rm = TRUE)
) %>%
filter(date >= (event_date_euro - days(analysis_window_euro)) & date <= (event_date_euro + days(analysis_window_euro)))
ggplot(daily_euro_dynamics, aes(x = date, y = euro_share)) +
geom_line(color = "grey", linewidth=1) +
geom_point(aes(size = avg_cli, color = avg_sentiment)) +
geom_vline(xintercept = event_date_euro, linetype = "dashed", color = "black", linewidth=1) +
scale_y_continuous(labels = percent_format()) +
scale_color_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment") +
scale_size_continuous(range = c(2, 12), name="Intenzitet konflikta (CLI)") +
theme_minimal(base_size = 14) +
labs(
title = "Monetarni seizmograf: Dinamika Euro uvođenja 2022.",
subtitle = "Linija=Udio teme | Veličina=Konflikt | Boja=Tonalitet",
x = "Datum", y = "Udio teme 'Euro uvođenje' u dnevnom HNB diskursu"
)
ggplot(daily_euro_dynamics, aes(x = date, y = euro_share)) +
geom_line(color = "grey", linewidth=1) +
geom_point(aes(size = avg_cli, color = avg_sentiment)) +
geom_vline(xintercept = event_date_euro, linetype = "dashed", color = "black", linewidth=1) +
scale_y_continuous(labels = percent_format()) +
scale_color_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment") +
scale_size_continuous(range = c(2, 12), name="Intenzitet konflikta (CLI)") +
theme_minimal(base_size = 14) +
labs(
title = "Monetarni seizmograf: Dinamika Euro uvođenja 2022.",
subtitle = "Linija=Udio teme | Veličina=Konflikt | Boja=Tonalitet",
x = "Datum", y = "Udio teme 'Euro uvođenje' u dnevnom HNB diskursu"
)
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# (Koraci 1 i 2 - pronalaženje dokumenata i izdvajanje konteksta)
target_keyword <- "guverner"
docs_with_target <- nlp_results_df %>%
filter(lemma == target_keyword) %>%
distinct(doc_id) %>%
pull(doc_id)
context_words <- nlp_results_df %>%
filter(doc_id %in% docs_with_target) %>%
filter(upos %in% c("NOUN", "ADJ")) %>%
filter(lemma != target_keyword) %>%
inner_join(dta_final %>% select(doc_id, year, sentiment_score), by = "doc_id")
context_words <- nlp_results_df %>%
filter(doc_id %in% docs_with_target) %>%
filter(upos %in% c("NOUN", "ADJ")) %>%
filter(lemma != target_keyword) %>%
inner_join(dta_final %>% select(doc_id, year, sentiment_score), by = "doc_id")
# 3. KORAK: Agregacija
associated_words_atmosphere <- context_words %>%
group_by(year, lemma) %>%
summarise(
total_cooccurrences = n(),
avg_sentiment = mean(sentiment_score, na.rm = TRUE),
.groups = "drop"
)
# 4. KORAK: Prilagodljivo filtriranje
top_associated_words_final <- associated_words_atmosphere %>%
group_by(year) %>%
# Uzimamo top 12 riječi po co-okurencijama za svaku godinu
arrange(desc(total_cooccurrences)) %>%
slice_head(n = 12) %>%
ungroup()
# 5. KORAK: Vizualizacija
ggplot(top_associated_words_final, aes(x = total_cooccurrences, y = reorder_within(lemma, total_cooccurrences, year), fill = avg_sentiment)) +
geom_col() +
scale_y_reordered() +
scale_fill_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment\nove kombinacije") +
facet_wrap(~ year, scales = "free_y") +
theme_minimal(base_size = 12) +
theme(strip.text = element_text(face = "bold")) +
labs(
title = "Evolucija i atmosfera narativa o guverneru HNB-a",
subtitle = "Boja stupca otkriva tonalitet specifičnog narativnog okvira",
x = "Broj zajedničkih pojavljivanja s riječi 'guverner'", y = "Asocirana riječ"
)
ggplot(top_associated_words_final, aes(x = total_cooccurrences, y = reorder_within(lemma, total_cooccurrences, year), fill = avg_sentiment)) +
geom_col() +
scale_y_reordered() +
scale_fill_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment\nove kombinacije") +
facet_wrap(~ year, scales = "free_y") +
theme_minimal(base_size = 12) +
theme(strip.text = element_text(face = "bold")) +
labs(
title = "Evolucija i atmosfera narativa o guverneru HNB-a",
subtitle = "Boja stupca otkriva tonalitet specifičnog narativnog okvira",
x = "Broj zajedničkih pojavljivanja s riječi 'guverner'", y = "Asocirana riječ"
)
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
ggplot(daily_euro_dynamics, aes(x = date, y = euro_share)) +
geom_line(color = "grey", linewidth=1) +
geom_point(aes(size = avg_cli, color = avg_sentiment)) +
geom_vline(xintercept = event_date_euro, linetype = "dashed", color = "black", linewidth=1) +
scale_y_continuous(labels = percent_format()) +
scale_color_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment") +
scale_size_continuous(range = c(2, 12), name="Intenzitet konflikta (CLI)") +
theme_minimal(base_size = 14) +
labs(
title = "Monetarni seizmograf: Dinamika Euro uvođenja 2022.",
subtitle = "Linija=Udio teme | Veličina=Konflikt | Boja=Tonalitet",
x = "Datum", y = "Udio teme 'Euro uvođenje' u dnevnom HNB diskursu"
)
if (!is.null(dev.list())) dev.off()
ggplot(daily_euro_dynamics, aes(x = date, y = euro_share)) +
geom_line(color = "grey", linewidth=1) +
geom_point(aes(size = avg_cli, color = avg_sentiment)) +
geom_vline(xintercept = event_date_euro, linetype = "dashed", color = "black", linewidth=1) +
scale_y_continuous(labels = percent_format()) +
scale_color_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment") +
scale_size_continuous(range = c(2, 12), name="Intenzitet konflikta (CLI)") +
theme_minimal(base_size = 14) +
labs(
title = "Monetarni seizmograf: Dinamika Euro uvođenja 2022.",
subtitle = "Linija=Udio teme | Veličina=Konflikt | Boja=Tonalitet",
x = "Datum", y = "Udio teme 'Euro uvođenje' u dnevnom HNB diskursu"
)
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
ggplot(daily_euro_dynamics, aes(x = date, y = euro_share)) +
geom_line(color = "grey", linewidth=1) +
geom_point(aes(size = avg_cli, color = avg_sentiment)) +
geom_vline(xintercept = event_date_euro, linetype = "dashed", color = "black", linewidth=1) +
scale_y_continuous(labels = percent_format()) +
scale_color_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment") +
scale_size_continuous(range = c(2, 12), name="Intenzitet konflikta (CLI)") +
theme_minimal(base_size = 14) +
labs(
title = "Monetarni seizmograf: Dinamika Euro uvođenja 2022.",
subtitle = "Linija=Udio teme | Veličina=Konflikt | Boja=Tonalitet",
x = "Datum", y = "Udio teme 'Euro uvođenje' u dnevnom HNB diskursu"
)
# --- Globalne postavke za R Markdown dokument ---
knitr::opts_chunk$set(
echo = FALSE,      # Skriva kod
message = FALSE,   # Skriva poruke
warning = FALSE,   # Skriva upozorenja
fig.width = 12,    # Širina slika
fig.height = 7,    # Visina slika
dpi = 200          # Visoka rezolucija slika
)
# --- Učitavanje svih potrebnih paketa na jednom mjestu ---
library(scales)
library(patchwork)
library(ggrepel)
library(dplyr)
library(tidytext)
library(stringr)
library(ggplot2)
library(forcats)
library(tidyr)
library(ggridges)
library(widyr)
library(ggraph)
library(igraph)
library(wordcloud)
library(RColorBrewer)
# --- Priprema podataka (izvršava se u pozadini) ---
# Učitavanje glavne baze podataka
dta <- readRDS("./hnb.rds") %>%
mutate(
DATE = as.Date(DATE), # Convert the column to Date class first
year = as.integer(format(DATE, "%Y"))
) %>%
filter(SOURCE_TYPE != "tiktok") %>%
mutate(
SOURCE_TYPE = factor(SOURCE_TYPE, levels = c("web", "youtube", "facebook", "twitter", "reddit", "forum", "comment"))
) %>%
filter(DATE >= as.Date("2021-01-01") & DATE < as.Date("2024-01-01")) %>%
filter(year != 2024) %>%
mutate(doc_id = row_number())
# Učitavanje prethodno obrađenih lingvističkih podataka (štedi vrijeme)
# Prilagodite putanju do vaših .rds datoteka
files <- list.files("D:/LUKA/HNB/Language model sample", full.names = TRUE, pattern = "\\.rds")
nlp_results_df <- lapply(files, readRDS) %>%
bind_rows() %>%
mutate(doc_id = as.integer(doc_id))
# --- NOVI POTROŠAČKI RJEČNICI ---
hnb_consumer_topics_dictionary_final <- list(
INTEREST_RATES = sort(unique(c(
"cijena novca", "eskontna stopa", "euribor", "hlađenje tržišta", "kamata na kredite",
"kamatna stopa", "kamatnjak", "ključna kamatna stopa", "nrs",
"posljedica za građane", "referentna stopa", "regulacija kamata",
"politika kamatnih stopa", "transmisijski mehanizam", "utjecaj na kredite",
"utjecaj na kamate", "dizanje kamata", "kamata na štednju", "lombardna stopa",
"monetarna politika", "pad kamata", "povećanje kamata", "rast kamata",
"smanjenje kamata", "utjecaj na štednju"
))),
LENDING_REGULATIONS = sort(unique(c(
"dohodak", "dsti", "kreditna sposobnost", "makroprudencijalna mjera",
"mjere hnb-a", "ograničenje zaduživanja", "ograničenje kredita", "omjer duga",
"regulacija zaduživanja", "supervizorska očekivanja", "uvjeti kreditiranja",
"financijska stabilnost", "kreditni registar", "ltv", "omjer duga i dohotka",
"omjer kredita i vrijednosti nekretnine", "prezaduženost"
))),
BANK_FEES = sort(unique(c(
"intervencija hnb-a", "kontrola naknada", "cijena usluga", "nadzor nad naknadama",
"naknada", "neopravdane naknade", "nepoštena praksa", "povećanje naknada",
"pritužba potrošača", "provizija", "regulacija naknada", "skriveni troškovi",
"zaštita potrošača", "zakon o platnom prometu", "bankovne naknade",
"naknada za obradu kredita", "naknada za vođenje računa", "transparentnost naknada",
"usporedivost naknada"
))),
BASIC_BANK_ACCOUNT = sort(unique(c(
"bez naknade", "besplatan račun", "osnovni račun", "osnovni račun za plaćanje",
"ranjive skupine", "socijalni paket", "zakonska obveza",
"direktiva o računima za plaćanje", "pravo na osnovni račun"
))),
CONSUMER_PROTECTION = sort(c(
"edukacija hnb", "financijska pismenost", "medijacija", "mirenje",
"nepoštena poslovna praksa", "potrošački spor", "prigovor na banku",
"pritužba hnb-u", "zaštita potrošača"
)),
HNB_INTERNAL_AFFAIRS = sort(unique(c(
"bonusi u hnb", "guvernerova plaća", "materijalna prava", "plaća", "plaće u hnb-u",
"povećanje plaće", "primanja dužnosnika", "prosječna plaća hnb", "revizija poslovanja",
"troškovi osoblja hnb", "plaća u hnb-u", "plaće dužnosnika", "primanja u hnb-u",
"revizija poslovanja hnb", "troškovi poslovanja hnb", "plaća viceguvernera"
)))
)
# Izračun tematskih scoreova i obogaćivanje baze podataka
calculate_theme_scores <- function(text, dictionaries) {
text_lower <- tolower(text)
total_words <- str_count(text_lower, "\\w+")
if (total_words == 0) return(NULL)
scores <- purrr::map(dictionaries, ~sum(str_count(text_lower, .x)))
normalized_scores <- purrr::map(scores, ~(.x / total_words) * 1000)
names(normalized_scores) <- paste0("norm_", names(scores))
scores_vec <- unlist(scores)
if(all(scores_vec == 0)){
dominant_topic <- "Nema Teme"
} else {
dominant_topic <- names(scores)[which.max(scores_vec)]
}
return(c(as.list(scores), as.list(normalized_scores), dominant_topic = dominant_topic))
}
# Primjena funkcije s novim, potrošačkim rječnicima
theme_analysis_data_consumer <- purrr::map_dfr(dta$FULL_TEXT, ~calculate_theme_scores(., hnb_consumer_topics_dictionary_final))
dta_with_consumer_themes <- bind_cols(dta, theme_analysis_data_consumer)
topic_trends_consumer <- dta_with_consumer_themes %>%
select(year, INTEREST_RATES:HNB_INTERNAL_AFFAIRS) %>%
pivot_longer(cols = -year, names_to = "topic", values_to = "count") %>%
group_by(year, topic) %>%
summarise(total_mentions = sum(count), .groups = 'drop') %>%
group_by(year) %>%
mutate(share = total_mentions / sum(total_mentions)) %>%
ungroup()
# Priprema podataka za labele
topic_trends_clean <- topic_trends_consumer %>%
mutate(topic = str_replace_all(topic, "_", " ") %>% str_to_title())
labels_data <- topic_trends_clean %>%
filter(year == max(year))
# Kreiranje plota
ggplot(topic_trends_clean, aes(x = year, y = share, color = topic, group = topic)) +
geom_line(linewidth = 1.5) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent_format()) +
scale_x_continuous(breaks = c(2021, 2022, 2023), expand = expansion(add = c(0, 0.5))) +
geom_label_repel(
data = labels_data,
aes(label = topic),
nudge_x = 0.2,
direction = "y",
hjust = 0,
segment.color = "grey50",
size = 4
) +
labs(title = "Promjena zastupljenosti potrošačkih tema",
x = "Godina", y = "Udio teme u korpusu") +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
thematic_intensity_data <- dta_with_consumer_themes %>%
select(starts_with("norm_")) %>%
pivot_longer(everything(), names_to = "topic", values_to = "intensity") %>%
mutate(topic = str_remove(topic, "norm_")) %>%
filter(intensity > 0) %>%
mutate(topic = str_replace_all(topic, "_", " ") %>% str_to_title())
ggplot(thematic_intensity_data, aes(x = intensity, y = fct_reorder(topic, intensity, .fun = median))) +
geom_density_ridges(scale = 2, fill = "#0072B2", color = "white", alpha = 0.8) +
scale_x_log10(breaks = c(1, 10, 100, 1000), labels = c("1", "10", "100", "1000")) +
theme_minimal(base_size = 14) +
labs(
title = "Distribucija intenziteta tema",
subtitle = "Koliko su teme centralne za članke u kojima se pojavljuju?",
x = "Intenzitet teme (spominjanja na 1000 riječi, log skala)",
y = "Tema"
) +
theme(panel.grid.major.y = element_blank())
engagement_by_topic <- dta_with_consumer_themes %>%
filter(dominant_topic != "Nema Teme") %>%
group_by(dominant_topic) %>%
summarise(
avg_interactions = mean(INTERACTIONS, na.rm = TRUE),
total_articles = n()
) %>%
arrange(desc(avg_interactions)) %>%
mutate(dominant_topic = str_replace_all(dominant_topic, "_", " ") %>% str_to_title())
ggplot(engagement_by_topic, aes(x = avg_interactions, y = reorder(dominant_topic, avg_interactions))) +
geom_col(fill = "#0072B2", width=0.8) +
geom_text(aes(label = round(avg_interactions)), hjust = -0.2, size=4) +
expand_limits(x = max(engagement_by_topic$avg_interactions) * 1.1) +
theme_minimal(base_size = 14) +
labs(title = "Koje teme generiraju najviše interakcija?",
subtitle = "Prosječan broj interakcija po članku za svaku dominantnu temu",
x = "Prosječne interakcije", y = "Dominantna tema") +
theme(panel.grid.major.y = element_blank())
# Identificiramo najčešće dominantne potrošačke teme
top_dominant_consumer_topics <- dta_with_consumer_themes %>%
filter(dominant_topic != "Nema Teme") %>%
count(dominant_topic, sort = TRUE) %>%
slice_head(n = 5) %>%
pull(dominant_topic)
# Priprema podataka
entities_in_topics <- nlp_results_df %>%
filter(upos == "PROPN") %>%
select(doc_id, lemma) %>%
inner_join(dta_with_consumer_themes %>% select(doc_id, dominant_topic), by = "doc_id") %>%
filter(dominant_topic %in% top_dominant_consumer_topics) %>%
filter(!lemma %in% c("hrvatska", "zagreb", "split", "eu", "hnb"))
# Izračun top aktera
top_actors_in_top_topics <- entities_in_topics %>%
count(dominant_topic, lemma, sort = TRUE) %>%
group_by(dominant_topic) %>%
slice_max(order_by = n, n = 10) %>%
ungroup() %>%
mutate(dominant_topic = str_replace_all(dominant_topic, "_", " ") %>% str_to_title())
# Vizualizacija
ggplot(top_actors_in_top_topics, aes(x = n, y = reorder_within(lemma, n, dominant_topic), fill = dominant_topic)) +
geom_col(show.legend = FALSE, width = 0.8) +
scale_y_reordered() +
scale_fill_viridis_d() +
facet_wrap(~ dominant_topic, scales = "free_y", ncol = 1) +
labs(
title = "Ključni akteri unutar Top 5 najzastupljenijih potrošačkih tema",
subtitle = "Top 10 najčešće spominjanih osoba ili organizacija za svaku temu",
x = "Ukupan broj spominjanja",
y = "Akter (lema)"
) +
theme_minimal(base_size = 14) +
theme(
strip.text = element_text(face = "bold", size = 12, hjust = 0),
panel.grid.major.y = element_blank()
)
topic_pairs_consumer <- dta_with_consumer_themes %>%
select(doc_id, starts_with("norm_")) %>%
pivot_longer(-doc_id, names_to = "topic", values_to = "intensity") %>%
mutate(topic = str_remove(topic, "norm_")) %>%
filter(intensity > 0) %>%
pairwise_cor(item = topic, feature = doc_id, upper = FALSE) %>%
mutate(item1 = str_replace_all(item1, "_", " ") %>% str_to_title(),
item2 = str_replace_all(item2, "_", " ") %>% str_to_title())
set.seed(123)
topic_pairs_consumer %>%
filter(correlation > 0.05) %>% # Smanjen prag za više veza
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation, edge_width = correlation), color = "lightblue") +
geom_node_point(color = "darkblue", size = 5) +
geom_node_text(aes(label = str_wrap(name, 20)), repel = TRUE, size = 4) +
theme_void() +
labs(
title = "Mreža povezanosti potrošačkih tema",
subtitle = "Koje se teme najčešće pojavljuju zajedno u istim člancima?",
edge_width = "Snaga veze (korelacija)",
edge_alpha = ""
)
