scores <- purrr::map(dictionaries, ~sum(str_count(text_lower, .x)))
normalized_scores <- purrr::map(scores, ~(.x / total_words) * 1000)
names(normalized_scores) <- paste0("norm_", names(scores))
scores_vec <- unlist(scores)
if(all(scores_vec == 0)){
dominant_topic <- "Nema Teme"
} else {
dominant_topic <- names(scores)[which.max(scores_vec)]
}
return(c(as.list(scores), as.list(normalized_scores), dominant_topic = dominant_topic))
}
theme_analysis_data <- purrr::map_dfr(dta$FULL_TEXT, ~calculate_theme_scores(., thematic_dictionaries_v3))
dta_enriched <- bind_cols(dta, theme_analysis_data)
dta_with_themes <- bind_cols(dta, theme_analysis_data)
theme_analysis_data2 <- purrr::map_dfr(dta$FULL_TEXT, ~calculate_theme_scores(., svi_ljudi_dictionary))
dta_enriched2 <- bind_cols(dta, theme_analysis_data2)
dta_with_themes2 <- bind_cols(dta, theme_analysis_data2)
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# --- KOD ZA DETEKCIJU ANOMALIJA (POBOLJŠANA VERZIJA) ---
daily_summary <- dta_final %>%
mutate(date = as.Date(DATE)) %>%
group_by(date) %>%
summarise(
n_articles = n(),
avg_cli = mean(cli, na.rm = TRUE)
) %>%
ungroup()
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# --- KOD ZA DETEKCIJU ANOMALIJA (POBOLJŠANA VERZIJA) ---
daily_summary <- dta %>%
mutate(date = as.Date(DATE)) %>%
group_by(date) %>%
summarise(
n_articles = n(),
avg_cli = mean(cli, na.rm = TRUE)
) %>%
ungroup()
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# --- 3.2: Izračun Sentiment Score-a (CroSentilex-Gold) ---
sentiment_counts_gold <- lemmatized_words_with_freq %>%
inner_join(crosentilex_gold_prepared, by = c("lemma" = "word")) %>%
filter(sentiment_value != 0) %>%
count(doc_id, sentiment_value) %>%
pivot_wider(names_from = sentiment_value, values_from = n, values_fill = 0)
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
lemmatized_words_with_freq <- nlp_results_df %>%
count(doc_id, lemma, name = "word_frequency")
# --- 3.2: Izračun Sentiment Score-a (CroSentilex-Gold) ---
sentiment_counts_gold <- lemmatized_words_with_freq %>%
inner_join(crosentilex_gold_prepared, by = c("lemma" = "word")) %>%
filter(sentiment_value != 0) %>%
count(doc_id, sentiment_value) %>%
pivot_wider(names_from = sentiment_value, values_from = n, values_fill = 0)
if (!"1" %in% names(sentiment_counts_gold)) { sentiment_counts_gold <- sentiment_counts_gold %>% mutate(`1` = 0) }
if (!"-1" %in% names(sentiment_counts_gold)) { sentiment_counts_gold <- sentiment_counts_gold %>% mutate(`-1` = 0) }
document_sentiments_gold <- sentiment_counts_gold %>%
rename(positive_words = `1`, negative_words = `-1`) %>%
mutate(sentiment_score_gold = (positive_words - negative_words) / (positive_words + negative_words + 1e-6)) %>%
select(doc_id, sentiment_score_gold)
# --- 3.3: Izračun Dominantne Emocije (NRC) ---
document_emotions <- lemmatized_words_with_freq %>%
inner_join(nrc_lexicon_long, by = c("lemma" = "word")) %>%
group_by(doc_id, emotion) %>%
summarise(total_freq = sum(word_frequency), .groups="drop") %>%
group_by(doc_id) %>%
slice_max(order_by = total_freq, n = 1, with_ties = FALSE) %>%
ungroup() %>%
select(doc_id, dominant_emotion = emotion)
# --- 3.3: Izračun Dominantne Emocije (NRC) ---
document_emotions <- lemmatized_words_with_freq %>%
inner_join(nrc_lexicon_long, by = c("lemma" = "word")) %>%
group_by(doc_id, emotion) %>%
summarise(total_freq = sum(word_frequency), .groups="drop") %>%
group_by(doc_id) %>%
slice_max(order_by = total_freq, n = 1, with_ties = FALSE) %>%
ungroup() %>%
select(doc_id, dominant_emotion = emotion)
# --- 3.4: Izračun Indeksa Konflikta (CLI i RCI) za financijske teme ---
conflict_lexicon <- unique(c(
(nrc_lexicon_long %>% filter(emotion %in% c("Ljutnja", "Gađenje", "Strah")) %>% pull(word)),
(crosentilex_full %>% filter(sentiment_value <= -0.75) %>% pull(word)),
c("kriza", "kolaps", "neuspjeh", "pogreška", "kritika", "neodgovorno", "rizično", "zabrinjavajuće", "nestabilno", "problematično", "kontroverzno", "sporno", "sumnjivo", "loš", "katastrofal", "kaotičan", "recesija", "inflacija", "deflacija", "bankrot")
))
cli_scores <- lemmatized_words_with_freq %>%
mutate(is_conflict = lemma %in% conflict_lexicon) %>%
group_by(doc_id) %>%
summarise(
total_words = sum(word_frequency),
conflict_words = sum(word_frequency[is_conflict])
) %>%
mutate(cli = (conflict_words / total_words) * 1000) %>% ungroup()
dta_temp <- dta_enriched %>%
left_join(document_sentiments_gold, by = "doc_id") %>%
left_join(document_emotions, by = "doc_id") %>%
left_join(cli_scores %>% select(doc_id, cli), by = "doc_id") %>%
mutate(
sentiment_score = ifelse(is.na(sentiment_score_gold), 0, sentiment_score_gold),
dominant_emotion = ifelse(is.na(dominant_emotion), "Neutralno", dominant_emotion),
cli = ifelse(is.na(cli), 0, cli)
)
avg_cli_media <- dta_temp %>% group_by(FROM) %>% summarise(avg_cli_media = mean(cli))
avg_cli_topic <- dta_temp %>% group_by(dominant_topic) %>% summarise(avg_cli_topic = mean(cli))
dta_final <- dta_temp %>%
left_join(avg_cli_media, by = "FROM") %>%
left_join(avg_cli_topic, by = "dominant_topic") %>%
mutate(
expected_cli = 0.5 * avg_cli_media + 0.5 * avg_cli_topic,
rci = cli - expected_cli
)
# --- KOD ZA DETEKCIJU ANOMALIJA (POBOLJŠANA VERZIJA) ---
daily_summary <- dta %>%
mutate(date = as.Date(DATE)) %>%
group_by(date) %>%
summarise(
n_articles = n(),
avg_cli = mean(cli, na.rm = TRUE)
) %>%
ungroup()
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# --- KOD ZA DETEKCIJU ANOMALIJA (POBOLJŠANA VERZIJA) ---
daily_summary <- dta_final %>%
mutate(date = as.Date(DATE)) %>%
group_by(date) %>%
summarise(
n_articles = n(),
avg_cli = mean(cli, na.rm = TRUE)
) %>%
ungroup()
# Računamo pragove (99-i percentil)
volume_threshold <- quantile(daily_summary$n_articles, 0.99)
cli_threshold <- quantile(daily_summary$avg_cli, 0.99)
# Identificiramo "potrese"
spikes_detected <- daily_summary %>%
mutate(
is_volume_spike = n_articles > volume_threshold,
is_cli_spike = avg_cli > cli_threshold
)
# Vizualizacija
p_volume <- ggplot(spikes_detected, aes(x = date, y = n_articles)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected, is_volume_spike), color = "red", size = 3) +
geom_hline(yintercept = volume_threshold, linetype="dashed", color="red") +
theme_minimal() +
labs(title = "Ekstremni volumen objava", y = "Broj članaka dnevno", x = "")
p_cli <- ggplot(spikes_detected, aes(x = date, y = avg_cli)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected, is_cli_spike), color = "red", size = 3) +
geom_hline(yintercept = cli_threshold, linetype="dashed", color="red") +
theme_minimal() +
labs(title = "Ekstremni intenzitetu konflikta", y = "Prosječni CLI dnevno", x = "Datum")
p_volume / p_cli
p_volume / p_cli
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
p_volume_z
# --- KOD ZA STANDARDIZIRANU DETEKCIJU ANOMALIJA ---
# Agregiramo podatke po danu
daily_summary <- dta_final %>%
mutate(date = as.Date(DATE),
year = year(date)) %>% # Dodajemo godinu za godišnju standardizaciju
group_by(date, year) %>%
summarise(
n_articles = n(),
avg_cli = mean(cli, na.rm = TRUE),
.groups = "drop"
)
# Standardiziramo vrijednosti (računamo Z-score) unutar svake godine
standardized_summary <- daily_summary %>%
group_by(year) %>%
mutate(
# Z-score = (vrijednost - prosjek) / standardna devijacija
z_score_volume = (n_articles - mean(n_articles)) / sd(n_articles),
z_score_cli = (avg_cli - mean(avg_cli)) / sd(avg_cli)
) %>%
ungroup()
# Definiramo prag za "šiljak" (npr. 3 standardne devijacije)
spike_threshold_z <- 3
# Identificiramo "potrese"
spikes_detected_z <- standardized_summary %>%
mutate(
is_volume_spike = z_score_volume > spike_threshold_z,
is_cli_spike = z_score_cli > spike_threshold_z
)
# --- ISPIS DATUMA S ANOMALIJAMA ---
volume_spike_dates <- spikes_detected_z %>%
filter(is_volume_spike) %>%
select(date, n_articles, z_score_volume) %>%
arrange(desc(z_score_volume))
cli_spike_dates <- spikes_detected_z %>%
filter(is_cli_spike) %>%
select(date, avg_cli, z_score_cli) %>%
arrange(desc(z_score_cli))
# (Ovaj dio ispod će ispisati tablice direktno u vaš HTML dokument)
cat("### Dani s Ekstremnim Volumom Objava\n\n")
knitr::kable(volume_spike_dates, caption = "Top datumi rangirani po Z-scoreu volumena.")
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# --- KOD ZA STANDARDIZIRANU DETEKCIJU ANOMALIJA ---
# Agregiramo podatke po danu
daily_summary <- dta_final %>%
mutate(date = as.Date(DATE),
year = year(date)) %>% # Dodajemo godinu za godišnju standardizaciju
group_by(date, year) %>%
summarise(
n_articles = n(),
avg_cli = mean(cli, na.rm = TRUE),
.groups = "drop"
)
# Standardiziramo vrijednosti (računamo Z-score) unutar svake godine
standardized_summary <- daily_summary %>%
group_by(year) %>%
mutate(
# Z-score = (vrijednost - prosjek) / standardna devijacija
z_score_volume = (n_articles - mean(n_articles)) / sd(n_articles),
z_score_cli = (avg_cli - mean(avg_cli)) / sd(avg_cli)
) %>%
ungroup()
# Definiramo prag za "šiljak" (npr. 3 standardne devijacije)
spike_threshold_z <- 3
# Identificiramo "potrese"
spikes_detected_z <- standardized_summary %>%
mutate(
is_volume_spike = z_score_volume > spike_threshold_z,
is_cli_spike = z_score_cli > spike_threshold_z
)
# --- ISPIS DATUMA S ANOMALIJAMA ---
volume_spike_dates <- spikes_detected_z %>%
filter(is_volume_spike) %>%
select(date, n_articles, z_score_volume) %>%
arrange(desc(z_score_volume))
cli_spike_dates <- spikes_detected_z %>%
filter(is_cli_spike) %>%
select(date, avg_cli, z_score_cli) %>%
arrange(desc(z_score_cli))
# # (Ovaj dio ispod će ispisati tablice direktno u vaš HTML dokument)
# cat("### Dani s Ekstremnim Volumom Objava\n\n")
# knitr::kable(volume_spike_dates, caption = "Top datumi rangirani po Z-scoreu volumena.")
#
# cat("\n### Dani s Ekstremnim Intenzitetom Konflikta\n\n")
# knitr::kable(cli_spike_dates, caption = "Top datumi rangirani po Z-scoreu konflikta.")
# --- VIZUALIZACIJA STANDARDIZIRANIH VRIJEDNOSTI ---
p_volume_z <- ggplot(spikes_detected_z, aes(x = date, y = z_score_volume)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected_z, is_volume_spike), color = "red", size = 3) +
geom_hline(yintercept = spike_threshold_z, linetype = "dashed", color = "red") +
theme_minimal() +
labs(
title = "Anomalije u volumenu objava (Standardizirano)",
y = "Odstupanje od prosjeka (u st. dev.)",
x = ""
)
p_cli_z <- ggplot(spikes_detected_z, aes(x = date, y = z_score_cli)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected_z, is_cli_spike), color = "red", size = 3) +
geom_hline(yintercept = spike_threshold_z, linetype = "dashed", color = "red") +
theme_minimal() +
labs(
title = "Anomalije u intenzitetu konflikta (Standardizirano)",
y = "Odstupanje od prosjeka (u st. dev.)",
x = "Datum"
)
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# --- KOD ZA DETEKCIJU ANOMALIJA (POBOLJŠANA VERZIJA) ---
daily_summary <- dta_final %>%
mutate(date = as.Date(DATE)) %>%
group_by(date) %>%
summarise(
n_articles = n(),
avg_cli = mean(cli, na.rm = TRUE)
) %>%
ungroup()
# Računamo pragove (99-i percentil)
volume_threshold <- quantile(daily_summary$n_articles, 0.99)
cli_threshold <- quantile(daily_summary$avg_cli, 0.99)
# Identificiramo "potrese"
spikes_detected <- daily_summary %>%
mutate(
is_volume_spike = n_articles > volume_threshold,
is_cli_spike = avg_cli > cli_threshold
)
# Vizualizacija
p_volume <- ggplot(spikes_detected, aes(x = date, y = n_articles)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected, is_volume_spike), color = "red", size = 3) +
geom_hline(yintercept = volume_threshold, linetype="dashed", color="red") +
theme_minimal() +
labs(title = "Ekstremni volumen objava", y = "Broj članaka dnevno", x = "")
p_cli <- ggplot(spikes_detected, aes(x = date, y = avg_cli)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected, is_cli_spike), color = "red", size = 3) +
geom_hline(yintercept = cli_threshold, linetype="dashed", color="red") +
theme_minimal() +
labs(title = "Ekstremni intenzitet konflikta", y = "Prosječni CLI dnevno", x = "Datum")
#p_volume / p_cli
# --- KOD ZA STANDARDIZIRANU DETEKCIJU ANOMALIJA ---
# Agregiramo podatke po danu
daily_summary <- dta_final %>%
mutate(date = as.Date(DATE),
year = year(date)) %>% # Dodajemo godinu za godišnju standardizaciju
group_by(date, year) %>%
summarise(
n_articles = n(),
avg_cli = mean(cli, na.rm = TRUE),
.groups = "drop"
)
# Standardiziramo vrijednosti (računamo Z-score) unutar svake godine
standardized_summary <- daily_summary %>%
group_by(year) %>%
mutate(
# Z-score = (vrijednost - prosjek) / standardna devijacija
z_score_volume = (n_articles - mean(n_articles)) / sd(n_articles),
z_score_cli = (avg_cli - mean(avg_cli)) / sd(avg_cli)
) %>%
ungroup()
# Definiramo prag za "šiljak" (npr. 3 standardne devijacije)
spike_threshold_z <- 3
# Identificiramo "potrese"
spikes_detected_z <- standardized_summary %>%
mutate(
is_volume_spike = z_score_volume > spike_threshold_z,
is_cli_spike = z_score_cli > spike_threshold_z
)
# --- ISPIS DATUMA S ANOMALIJAMA ---
volume_spike_dates <- spikes_detected_z %>%
filter(is_volume_spike) %>%
select(date, n_articles, z_score_volume) %>%
arrange(desc(z_score_volume))
cli_spike_dates <- spikes_detected_z %>%
filter(is_cli_spike) %>%
select(date, avg_cli, z_score_cli) %>%
arrange(desc(z_score_cli))
# # (Ovaj dio ispod će ispisati tablice direktno u vaš HTML dokument)
# cat("### Dani s Ekstremnim Volumom Objava\n\n")
# knitr::kable(volume_spike_dates, caption = "Top datumi rangirani po Z-scoreu volumena.")
#
# cat("\n### Dani s Ekstremnim Intenzitetom Konflikta\n\n")
# knitr::kable(cli_spike_dates, caption = "Top datumi rangirani po Z-scoreu konflikta.")
# --- VIZUALIZACIJA STANDARDIZIRANIH VRIJEDNOSTI ---
p_volume_z <- ggplot(spikes_detected_z, aes(x = date, y = z_score_volume)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected_z, is_volume_spike), color = "red", size = 3) +
geom_hline(yintercept = spike_threshold_z, linetype = "dashed", color = "red") +
theme_minimal() +
labs(
title = "Anomalije u volumenu objava (Standardizirano)",
y = "Odstupanje od prosjeka (u st. dev.)",
x = ""
)
p_cli_z <- ggplot(spikes_detected_z, aes(x = date, y = z_score_cli)) +
geom_line(color = "grey") +
geom_point(data = filter(spikes_detected_z, is_cli_spike), color = "red", size = 3) +
geom_hline(yintercept = spike_threshold_z, linetype = "dashed", color = "red") +
theme_minimal() +
labs(
title = "Anomalije u intenzitetu konflikta (Standardizirano)",
y = "Odstupanje od prosjeka (u st. dev.)",
x = "Datum"
)
p_volume_z
p_volume_z
p_cli_z
p_cli_z
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# --- KOD ZA "MONETARNI SEIZMOGRAF" ZA EURO KONVERGENCIJU 2022 ---
event_date_euro <- as.Date("2022-06-01") # Pretpostavljamo datum Euro izvještaja
analysis_window_euro <- 21 # Analiziramo 3 tjedna prije i poslije
daily_euro_dynamics <- dta_final %>%
mutate(date = as.Date(DATE)) %>%
group_by(date) %>%
summarise(
# Udio članaka s dominantnom temom EURO_UVOĐENJE
euro_share = mean(dominant_topic == "EURO_UVOĐENJE", na.rm = TRUE),
# Prosječni CLI i sentiment SAMO za članke o euru taj dan
avg_cli = mean(cli[dominant_topic == "EURO_UVOĐENJE"], na.rm = TRUE),
avg_sentiment = mean(sentiment_score[dominant_topic == "EURO_UVOĐENJE"], na.rm = TRUE)
) %>%
filter(date >= (event_date_euro - days(analysis_window_euro)) & date <= (event_date_euro + days(analysis_window_euro)))
ggplot(daily_euro_dynamics, aes(x = date, y = euro_share)) +
geom_line(color = "grey", linewidth=1) +
geom_point(aes(size = avg_cli, color = avg_sentiment)) +
geom_vline(xintercept = event_date_euro, linetype = "dashed", color = "black", linewidth=1) +
scale_y_continuous(labels = percent_format()) +
scale_color_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment") +
scale_size_continuous(range = c(2, 12), name="Intenzitet konflikta (CLI)") +
theme_minimal(base_size = 14) +
labs(
title = "Monetarni seizmograf: Dinamika Euro uvođenja 2022.",
subtitle = "Linija=Udio teme | Veličina=Konflikt | Boja=Tonalitet",
x = "Datum", y = "Udio teme 'Euro uvođenje' u dnevnom HNB diskursu"
)
ggplot(daily_euro_dynamics, aes(x = date, y = euro_share)) +
geom_line(color = "grey", linewidth=1) +
geom_point(aes(size = avg_cli, color = avg_sentiment)) +
geom_vline(xintercept = event_date_euro, linetype = "dashed", color = "black", linewidth=1) +
scale_y_continuous(labels = percent_format()) +
scale_color_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment") +
scale_size_continuous(range = c(2, 12), name="Intenzitet konflikta (CLI)") +
theme_minimal(base_size = 14) +
labs(
title = "Monetarni seizmograf: Dinamika Euro uvođenja 2022.",
subtitle = "Linija=Udio teme | Veličina=Konflikt | Boja=Tonalitet",
x = "Datum", y = "Udio teme 'Euro uvođenje' u dnevnom HNB diskursu"
)
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
# (Koraci 1 i 2 - pronalaženje dokumenata i izdvajanje konteksta)
target_keyword <- "guverner"
docs_with_target <- nlp_results_df %>%
filter(lemma == target_keyword) %>%
distinct(doc_id) %>%
pull(doc_id)
context_words <- nlp_results_df %>%
filter(doc_id %in% docs_with_target) %>%
filter(upos %in% c("NOUN", "ADJ")) %>%
filter(lemma != target_keyword) %>%
inner_join(dta_final %>% select(doc_id, year, sentiment_score), by = "doc_id")
context_words <- nlp_results_df %>%
filter(doc_id %in% docs_with_target) %>%
filter(upos %in% c("NOUN", "ADJ")) %>%
filter(lemma != target_keyword) %>%
inner_join(dta_final %>% select(doc_id, year, sentiment_score), by = "doc_id")
# 3. KORAK: Agregacija
associated_words_atmosphere <- context_words %>%
group_by(year, lemma) %>%
summarise(
total_cooccurrences = n(),
avg_sentiment = mean(sentiment_score, na.rm = TRUE),
.groups = "drop"
)
# 4. KORAK: Prilagodljivo filtriranje
top_associated_words_final <- associated_words_atmosphere %>%
group_by(year) %>%
# Uzimamo top 12 riječi po co-okurencijama za svaku godinu
arrange(desc(total_cooccurrences)) %>%
slice_head(n = 12) %>%
ungroup()
# 5. KORAK: Vizualizacija
ggplot(top_associated_words_final, aes(x = total_cooccurrences, y = reorder_within(lemma, total_cooccurrences, year), fill = avg_sentiment)) +
geom_col() +
scale_y_reordered() +
scale_fill_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment\nove kombinacije") +
facet_wrap(~ year, scales = "free_y") +
theme_minimal(base_size = 12) +
theme(strip.text = element_text(face = "bold")) +
labs(
title = "Evolucija i atmosfera narativa o guverneru HNB-a",
subtitle = "Boja stupca otkriva tonalitet specifičnog narativnog okvira",
x = "Broj zajedničkih pojavljivanja s riječi 'guverner'", y = "Asocirana riječ"
)
ggplot(top_associated_words_final, aes(x = total_cooccurrences, y = reorder_within(lemma, total_cooccurrences, year), fill = avg_sentiment)) +
geom_col() +
scale_y_reordered() +
scale_fill_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment\nove kombinacije") +
facet_wrap(~ year, scales = "free_y") +
theme_minimal(base_size = 12) +
theme(strip.text = element_text(face = "bold")) +
labs(
title = "Evolucija i atmosfera narativa o guverneru HNB-a",
subtitle = "Boja stupca otkriva tonalitet specifičnog narativnog okvira",
x = "Broj zajedničkih pojavljivanja s riječi 'guverner'", y = "Asocirana riječ"
)
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
ggplot(daily_euro_dynamics, aes(x = date, y = euro_share)) +
geom_line(color = "grey", linewidth=1) +
geom_point(aes(size = avg_cli, color = avg_sentiment)) +
geom_vline(xintercept = event_date_euro, linetype = "dashed", color = "black", linewidth=1) +
scale_y_continuous(labels = percent_format()) +
scale_color_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment") +
scale_size_continuous(range = c(2, 12), name="Intenzitet konflikta (CLI)") +
theme_minimal(base_size = 14) +
labs(
title = "Monetarni seizmograf: Dinamika Euro uvođenja 2022.",
subtitle = "Linija=Udio teme | Veličina=Konflikt | Boja=Tonalitet",
x = "Datum", y = "Udio teme 'Euro uvođenje' u dnevnom HNB diskursu"
)
if (!is.null(dev.list())) dev.off()
ggplot(daily_euro_dynamics, aes(x = date, y = euro_share)) +
geom_line(color = "grey", linewidth=1) +
geom_point(aes(size = avg_cli, color = avg_sentiment)) +
geom_vline(xintercept = event_date_euro, linetype = "dashed", color = "black", linewidth=1) +
scale_y_continuous(labels = percent_format()) +
scale_color_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment") +
scale_size_continuous(range = c(2, 12), name="Intenzitet konflikta (CLI)") +
theme_minimal(base_size = 14) +
labs(
title = "Monetarni seizmograf: Dinamika Euro uvođenja 2022.",
subtitle = "Linija=Udio teme | Veličina=Konflikt | Boja=Tonalitet",
x = "Datum", y = "Udio teme 'Euro uvođenje' u dnevnom HNB diskursu"
)
# --- Globalne postavke ---
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 12, fig.height = 9, dpi = 350)
ggplot(daily_euro_dynamics, aes(x = date, y = euro_share)) +
geom_line(color = "grey", linewidth=1) +
geom_point(aes(size = avg_cli, color = avg_sentiment)) +
geom_vline(xintercept = event_date_euro, linetype = "dashed", color = "black", linewidth=1) +
scale_y_continuous(labels = percent_format()) +
scale_color_gradient2(low = "firebrick", mid = "white", high = "steelblue", midpoint = 0, name="Prosj. sentiment") +
scale_size_continuous(range = c(2, 12), name="Intenzitet konflikta (CLI)") +
theme_minimal(base_size = 14) +
labs(
title = "Monetarni seizmograf: Dinamika Euro uvođenja 2022.",
subtitle = "Linija=Udio teme | Veličina=Konflikt | Boja=Tonalitet",
x = "Datum", y = "Udio teme 'Euro uvođenje' u dnevnom HNB diskursu"
)
